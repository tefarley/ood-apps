{"version":3,"sources":["FileList.jsx"],"names":["classNames","FileItem","VirtualList","chunks","list","size","chunked","currentChunk","forEach","item","length","push","props","noFiles","totalFileCount","dashboardFilesClass","rowHeight","itemsPerRow","fileProps","id","error","i18n","uppy","acquirers","resumableUploads","individualCancellation","hideRetryButton","hidePauseResumeButton","hideCancelButton","showLinkToFileUploadResult","showRemoveButtonAfterComplete","isWide","metaFields","recoveredState","toggleFileCard","handleRequestThumbnail","handleCancelThumbnail","sortByGhostComesFirst","file1","file2","files","isGhost","Object","keys","sort","rows","renderRow","row","map","fileID","openFileEditor","canEditFile","toggleAddFilesPanel"],"mappings":"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","sourcesContent":["import classNames from 'classnames'\nimport { h } from 'preact'\nimport FileItem from './FileItem/index.jsx'\nimport VirtualList from './VirtualList.jsx'\n\nfunction chunks (list, size) {\n  const chunked = []\n  let currentChunk = []\n  list.forEach((item) => {\n    if (currentChunk.length < size) {\n      currentChunk.push(item)\n    } else {\n      chunked.push(currentChunk)\n      currentChunk = [item]\n    }\n  })\n  if (currentChunk.length) chunked.push(currentChunk)\n  return chunked\n}\n\nexport default (props) => {\n  const noFiles = props.totalFileCount === 0\n  const dashboardFilesClass = classNames(\n    'uppy-Dashboard-files',\n    { 'uppy-Dashboard-files--noFiles': noFiles },\n  )\n\n  // It's not great that this is hardcoded!\n  // It's ESPECIALLY not great that this is checking against `itemsPerRow`!\n  const rowHeight = props.itemsPerRow === 1\n    // Mobile\n    ? 71\n    // 190px height + 2 * 5px margin\n    : 200\n\n  const fileProps = {\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\n    id: props.id,\n    error: props.error,\n    // TODO move this to context\n    i18n: props.i18n,\n    uppy: props.uppy,\n    // features\n    acquirers: props.acquirers,\n    resumableUploads: props.resumableUploads,\n    individualCancellation: props.individualCancellation,\n    // visual options\n    hideRetryButton: props.hideRetryButton,\n    hidePauseResumeButton: props.hidePauseResumeButton,\n    hideCancelButton: props.hideCancelButton,\n    showLinkToFileUploadResult: props.showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete: props.showRemoveButtonAfterComplete,\n    isWide: props.isWide,\n    metaFields: props.metaFields,\n    recoveredState: props.recoveredState,\n    // callbacks\n    toggleFileCard: props.toggleFileCard,\n    handleRequestThumbnail: props.handleRequestThumbnail,\n    handleCancelThumbnail: props.handleCancelThumbnail,\n  }\n\n  const sortByGhostComesFirst = (file1, file2) => {\n    return props.files[file2].isGhost - props.files[file1].isGhost\n  }\n\n  // Sort files by file.isGhost, ghost files first, only if recoveredState is present\n  const files = Object.keys(props.files)\n  if (props.recoveredState) files.sort(sortByGhostComesFirst)\n  const rows = chunks(files, props.itemsPerRow)\n\n  const renderRow = (row) => (\n    // The `role=\"presentation` attribute ensures that the list items are properly\n    // associated with the `VirtualList` element.\n    // We use the first file ID as the keyâ€”this should not change across scroll rerenders\n    <div role=\"presentation\" key={row[0]}>\n      {row.map((fileID) => (\n        <FileItem\n          key={fileID}\n          uppy={props.uppy}\n          {...fileProps} // eslint-disable-line react/jsx-props-no-spreading\n          role=\"listitem\"\n          openFileEditor={props.openFileEditor}\n          canEditFile={props.canEditFile}\n          toggleAddFilesPanel={props.toggleAddFilesPanel}\n          file={props.files[fileID]}\n        />\n      ))}\n    </div>\n  )\n\n  return (\n    <VirtualList\n      class={dashboardFilesClass}\n      role=\"list\"\n      data={rows}\n      renderRow={renderRow}\n      rowHeight={rowHeight}\n    />\n  )\n}\n"]}