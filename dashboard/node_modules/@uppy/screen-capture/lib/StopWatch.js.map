{"version":3,"sources":["StopWatch.jsx"],"names":["Stopwatch","Component","constructor","props","state","elapsedTime","wrapperStyle","width","height","display","overlayStyle","position","background","opacity","infoContainerStyle","marginLeft","marginRight","marginTop","marginBottom","zIndex","color","infotextStyle","fontSize","timeStyle","fontWeight","fontFamily","startTimer","timerTick","timerRunning","resetTimer","clearTimeout","timer","setState","setTimeout","fmtMSS","s","render","recording","i18n","minAndSec"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact'\n\n// TODO: rename this class to StopWatch in the next major.\nclass Stopwatch extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { elapsedTime: 0 }\n\n    this.wrapperStyle = {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n    }\n\n    this.overlayStyle = {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      background: 'black',\n      opacity: 0.7,\n    }\n\n    this.infoContainerStyle = {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 'auto',\n      marginBottom: 'auto',\n      zIndex: 1,\n      color: 'white',\n    }\n\n    this.infotextStyle = {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginBottom: '1rem',\n      fontSize: '1.5rem',\n    }\n\n    this.timeStyle = {\n      display: 'block',\n      fontWeight: 'bold',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      fontSize: '3rem',\n      fontFamily: 'Courier New',\n    }\n  }\n\n  startTimer () {\n    this.timerTick()\n    this.timerRunning = true\n  }\n\n  resetTimer () {\n    clearTimeout(this.timer)\n    this.setState({ elapsedTime: 0 })\n    this.timerRunning = false\n  }\n\n  timerTick () {\n    this.timer = setTimeout(() => {\n      this.setState(state => ({ elapsedTime: state.elapsedTime + 1 }))\n      this.timerTick()\n    }, 1000)\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  fmtMSS (s) {\n    // eslint-disable-next-line no-return-assign, no-param-reassign\n    return (s - (s %= 60)) / 60 + (s > 9 ? ':' : ':0') + s\n  }\n\n  render () {\n    const { recording, i18n } = { ...this.props }\n    const { elapsedTime } = this.state\n\n    // second to minutes and seconds\n    const minAndSec = this.fmtMSS(elapsedTime)\n\n    if (recording && !this.timerRunning) {\n      this.startTimer()\n    }\n\n    if (!recording && this.timerRunning) {\n      this.resetTimer()\n    }\n\n    if (recording) {\n      return (\n        <div style={this.wrapperStyle}>\n          <div style={this.overlayStyle} />\n          <div style={this.infoContainerStyle}>\n            <div style={this.infotextStyle}>\n              {i18n('recording')}\n            </div>\n            <div style={this.timeStyle}>\n              {minAndSec}\n            </div>\n          </div>\n\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nexport default Stopwatch\n"]}