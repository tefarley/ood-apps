{"version":3,"sources":["SharedHandler.js"],"names":["remoteFileObjToLocal","SharedHandler","constructor","plugin","filterItems","bind","toggleCheckbox","recordShiftKeyPress","isChecked","loaderWrapper","items","state","getPluginState","filterInput","filter","folder","name","toLowerCase","indexOf","e","isShiftKeyPressed","shiftKey","file","stopPropagation","preventDefault","currentTarget","focus","folders","files","concat","lastCheckbox","prevIndex","currentIndex","currentSelection","slice","reducedCurrentSelection","item","uppy","validatedRestrictions","validateRestrictions","getFiles","result","push","info","message","reason","opts","infoTimeout","setPluginState","id","some","promise","then","catch_","loading","catch","err"],"mappings":"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","sourcesContent":["import remoteFileObjToLocal from '@uppy/utils/lib/remoteFileObjToLocal'\n\nexport default class SharedHandler {\n  constructor (plugin) {\n    this.plugin = plugin\n    this.filterItems = this.filterItems.bind(this)\n    this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    this.recordShiftKeyPress = this.recordShiftKeyPress.bind(this)\n    this.isChecked = this.isChecked.bind(this)\n    this.loaderWrapper = this.loaderWrapper.bind(this)\n  }\n\n  filterItems (items) {\n    const state = this.plugin.getPluginState()\n    if (!state.filterInput || state.filterInput === '') {\n      return items\n    }\n    return items.filter((folder) => {\n      return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1\n    })\n  }\n\n  recordShiftKeyPress (e) {\n    this.isShiftKeyPressed = e.shiftKey\n  }\n\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one.\n   */\n  toggleCheckbox (e, file) {\n    e.stopPropagation()\n    e.preventDefault()\n    e.currentTarget.focus()\n    const { folders, files } = this.plugin.getPluginState()\n    const items = this.filterItems(folders.concat(files))\n    // Shift-clicking selects a single consecutive list of items\n    // starting at the previous click and deselects everything else.\n    if (this.lastCheckbox && this.isShiftKeyPressed) {\n      const prevIndex = items.indexOf(this.lastCheckbox)\n      const currentIndex = items.indexOf(file)\n      const currentSelection = (prevIndex < currentIndex)\n        ? items.slice(prevIndex, currentIndex + 1)\n        : items.slice(currentIndex, prevIndex + 1)\n      const reducedCurrentSelection = []\n\n      // Check restrictions on each file in currentSelection,\n      // reduce it to only contain files that pass restrictions\n      for (const item of currentSelection) {\n        const { uppy } = this.plugin\n        const validatedRestrictions = uppy.validateRestrictions(\n          remoteFileObjToLocal(item),\n          [...uppy.getFiles(), ...reducedCurrentSelection],\n        )\n        if (validatedRestrictions.result) {\n          reducedCurrentSelection.push(item)\n        } else {\n          uppy.info({ message: validatedRestrictions.reason }, 'error', uppy.opts.infoTimeout)\n        }\n      }\n      this.plugin.setPluginState({ currentSelection: reducedCurrentSelection })\n      return\n    }\n\n    this.lastCheckbox = file\n    const { currentSelection } = this.plugin.getPluginState()\n    if (this.isChecked(file)) {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.filter((item) => item.id !== file.id),\n      })\n    } else {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.concat([file]),\n      })\n    }\n  }\n\n  isChecked (file) {\n    const { currentSelection } = this.plugin.getPluginState()\n    // comparing id instead of the file object, because the reference to the object\n    // changes when we switch folders, and the file list is updated\n    return currentSelection.some((item) => item.id === file.id)\n  }\n\n  loaderWrapper (promise, then, catch_) {\n    promise\n      .then((result) => {\n        this.plugin.setPluginState({ loading: false })\n        then(result)\n      }).catch((err) => {\n        this.plugin.setPluginState({ loading: false })\n        catch_(err)\n      })\n    this.plugin.setPluginState({ loading: true })\n  }\n}\n"]}