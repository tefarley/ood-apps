{"version":3,"sources":["Dashboard.jsx"],"names":["StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","getDroppedFiles","memoizeOne","FOCUSABLE_ELEMENTS","createSuperFocus","DashboardUI","packageJson","locale","memoize","default","TAB_KEY","ESC_KEY","createPromise","o","promise","Promise","resolve","reject","defaultPickerIcon","Dashboard","UIPlugin","constructor","uppy","opts","removeTarget","plugin","pluginState","getPluginState","newTargets","targets","filter","target","id","setPluginState","addTarget","callerPluginId","name","callerPluginName","title","callerPluginType","type","msg","log","undefined","state","slice","push","el","hideAllPanels","update","activePickerPanel","showAddFilesPanel","activeOverlayType","fileCardFor","showFileEditor","showPanel","canEditFile","file","editors","some","getPlugin","openFileEditor","forEach","editor","selectFile","saveFileEditor","save","openModal","savedScrollPosition","window","pageYOffset","savedActiveElement","document","activeElement","disablePageScrollWhenModalOpen","body","classList","add","animateOpenClose","isClosing","handler","isHidden","removeEventListener","addEventListener","browserBackButtonClose","updateBrowserHistory","handleKeyDownInModal","emit","closeModal","manualClose","remove","superFocus","cancel","focus","history","modalName","back","isModalOpen","requestCloseModal","onRequestCloseModal","setDarkModeCapability","isDarkModeOn","capabilities","getState","setState","darkMode","handleSystemDarkModeChange","event","isDarkModeOnNow","matches","toggleFileCard","show","fileID","getFile","toggleAddFilesPanel","addFiles","files","descriptors","map","source","data","meta","relativePath","webkitRelativePath","err","startListeningToResize","resizeObserver","ResizeObserver","entries","uppyDashboardInnerEl","width","height","contentRect","containerWidth","containerHeight","areInsidesReadyToBeVisible","observe","querySelector","makeDashboardInsidesVisibleAnywayTimeout","setTimeout","isModalAndClosed","inline","stopListeningToResize","disconnect","clearTimeout","recordIfFocusedOnUppyRecently","contains","ifFocusedOnUppyRecently","disableAllFocusableElements","disable","focusableNodes","querySelectorAll","node","currentTabIndex","getAttribute","dataset","inertTabindex","setAttribute","removeAttribute","dashboardIsDisabled","pushState","handlePopState","keyCode","trapFocus","forModal","handleClickOutside","closeModalOnClickOutside","handlePaste","iteratePlugins","handleRootPaste","clipboardData","length","handleInputChange","preventDefault","handleDragOver","stopPropagation","canSomePluginHandleRootDrop","somePluginCanHandleRootDrop","canHandleRootDrop","doesEventHaveFiles","types","dataTransfer","hasFiles","disabled","disableLocalFiles","allowNewUpload","dropEffect","removeDragOverClassTimeout","isDraggingOver","onDragOver","handleDragLeave","onDragLeave","handleDrop","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","onDrop","handleRequestThumbnail","waitForThumbnailsBeforeUpload","handleCancelThumbnail","handleKeyDownInInline","forInline","handlePasteOnBody","isFocusInOverlay","handleComplete","failed","closeAfterFinish","handleCancelRestore","firstFile","initEvents","trigger","showModalTrigger","on","autoOpenFileEditor","removeEvents","off","superFocusOnEachUpdate","isFocusInUppy","isFocusNowhere","isInformerHidden","isModal","afterUpdate","saveFileCard","setFileMeta","icon","render","isSupported","newFiles","uploadStartedFiles","completeFiles","erroredFiles","inProgressFiles","inProgressNotPausedFiles","processingFiles","isUploadStarted","isAllComplete","isAllErrored","isAllPaused","getObjectOfFilesPerState","acquirers","progressindicators","theme","indexOf","fileManagerSelectionType","console","warn","totalFileCount","Object","keys","totalProgress","direction","autoProceed","i18n","i18nArray","note","recoveredState","metaFields","resumableUploads","individualCancellation","isMobileDevice","showLinkToFileUploadResult","proudlyDisplayPoweredByUppy","hideCancelButton","hideRetryButton","hidePauseResumeButton","showRemoveButtonAfterComplete","isTargetDOMEl","parentElement","allowedFileTypes","restrictions","maxNumberOfFiles","requiredMetaFields","showSelectedFiles","discoverProviderPlugins","install","Error","allowMultipleUploads","allowMultipleUploadBatches","mount","plugins","pluginID","disableStatusBar","use","hideUploadButton","showProgressDetails","hideAfterFinish","hideProgressAfterFinish","doneButtonHandler","disableInformer","disableThumbnailGenerator","thumbnailWidth","thumbnailHeight","thumbnailType","lazy","darkModeMediaQuery","matchMedia","isDarkModeOnFromTheStart","addListener","uninstall","informer","removePlugin","statusBar","thumbnail","unmount","removeListener","defaultLocale","defaultOptions","reset","i18nInit","VERSION","version"],"mappings":"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","sourcesContent":["import { h } from 'preact'\nimport { UIPlugin } from '@uppy/core'\nimport StatusBar from '@uppy/status-bar'\nimport Informer from '@uppy/informer'\nimport ThumbnailGenerator from '@uppy/thumbnail-generator'\nimport findAllDOMElements from '@uppy/utils/lib/findAllDOMElements'\nimport toArray from '@uppy/utils/lib/toArray'\nimport getDroppedFiles from '@uppy/utils/lib/getDroppedFiles'\nimport { nanoid } from 'nanoid/non-secure'\nimport memoizeOne from 'memoize-one'\nimport FOCUSABLE_ELEMENTS from '@uppy/utils/lib/FOCUSABLE_ELEMENTS.js'\nimport * as trapFocus from './utils/trapFocus.js'\nimport createSuperFocus from './utils/createSuperFocus.js'\nimport DashboardUI from './components/Dashboard.jsx'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\nconst memoize = memoizeOne.default || memoizeOne\n\nconst TAB_KEY = 9\nconst ESC_KEY = 27\n\nfunction createPromise () {\n  const o = {}\n  o.promise = new Promise((resolve, reject) => {\n    o.resolve = resolve\n    o.reject = reject\n  })\n  return o\n}\n\nfunction defaultPickerIcon () {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\">\n      <path d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\" />\n    </svg>\n  )\n}\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nexport default class Dashboard extends UIPlugin {\n  static VERSION = packageJson.version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n    this.modalName = `uppy-Dashboard-${nanoid()}`\n\n    this.defaultLocale = locale\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: null,\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      thumbnailType: 'image/jpeg',\n      waitForThumbnailsBeforeUpload: false,\n      defaultPickerIcon,\n      showLinkToFileUploadResult: false,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideCancelButton: false,\n      hideRetryButton: false,\n      hidePauseResumeButton: false,\n      hideProgressAfterFinish: false,\n      doneButtonHandler: () => {\n        this.uppy.reset()\n        this.requestCloseModal()\n      },\n      note: null,\n      closeModalOnClickOutside: false,\n      closeAfterFinish: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      animateOpenClose: true,\n      fileManagerSelectionType: 'files',\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: () => this.closeModal(),\n      showSelectedFiles: true,\n      showRemoveButtonAfterComplete: false,\n      browserBackButtonClose: false,\n      theme: 'light',\n      autoOpenFileEditor: false,\n      disabled: false,\n      disableLocalFiles: false,\n    }\n\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.superFocus = createSuperFocus()\n    this.ifFocusedOnUppyRecently = false\n\n    // Timeouts\n    this.makeDashboardInsidesVisibleAnywayTimeout = null\n    this.removeDragOverClassTimeout = null\n  }\n\n  removeTarget = (plugin) => {\n    const pluginState = this.getPluginState()\n    // filter out the one we want to remove\n    const newTargets = pluginState.targets.filter(target => target.id !== plugin.id)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n  }\n\n  addTarget = (plugin) => {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer'\n        && callerPluginType !== 'progressindicator'\n        && callerPluginType !== 'editor') {\n      const msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor'\n      this.uppy.log(msg, 'error')\n      return undefined\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType,\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n\n    return this.el\n  }\n\n  hideAllPanels = () => {\n    const state = this.getPluginState()\n    const update = {\n      activePickerPanel: false,\n      showAddFilesPanel: false,\n      activeOverlayType: null,\n      fileCardFor: null,\n      showFileEditor: false,\n    }\n\n    if (state.activePickerPanel === update.activePickerPanel\n        && state.showAddFilesPanel === update.showAddFilesPanel\n        && state.showFileEditor === update.showFileEditor\n        && state.activeOverlayType === update.activeOverlayType) {\n      // avoid doing a state update if nothing changed\n      return\n    }\n\n    this.setPluginState(update)\n  }\n\n  showPanel = (id) => {\n    const { targets } = this.getPluginState()\n\n    const activePickerPanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePickerPanel,\n      activeOverlayType: 'PickerPanel',\n    })\n  }\n\n  canEditFile = (file) => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    return editors.some((target) => (\n      this.uppy.getPlugin(target.id).canEditFile(file)\n    ))\n  }\n\n  openFileEditor = (file) => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    this.setPluginState({\n      showFileEditor: true,\n      fileCardFor: file.id || null,\n      activeOverlayType: 'FileEditor',\n    })\n\n    editors.forEach((editor) => {\n      this.uppy.getPlugin(editor.id).selectFile(file)\n    })\n  }\n\n  saveFileEditor = () => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    editors.forEach((editor) => {\n      this.uppy.getPlugin(editor.id).save()\n    })\n\n    this.hideAllPanels()\n  }\n\n  openModal = () => {\n    const { promise, resolve } = createPromise()\n    // save scroll position\n    this.savedScrollPosition = window.pageYOffset\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose && this.getPluginState().isClosing) {\n      const handler = () => {\n        this.setPluginState({\n          isHidden: false,\n        })\n        this.el.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: false,\n      })\n      resolve()\n    }\n\n    if (this.opts.browserBackButtonClose) {\n      this.updateBrowserHistory()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.addEventListener('keydown', this.handleKeyDownInModal)\n\n    this.uppy.emit('dashboard:modal-open')\n\n    return promise\n  }\n\n  closeModal = (opts = {}) => {\n    const {\n      // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\n      manualClose = true,\n    } = opts\n\n    const { isHidden, isClosing } = this.getPluginState()\n    if (isHidden || isClosing) {\n      // short-circuit if animation is ongoing\n      return undefined\n    }\n\n    const { promise, resolve } = createPromise()\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose) {\n      this.setPluginState({\n        isClosing: true,\n      })\n      const handler = () => {\n        this.setPluginState({\n          isHidden: true,\n          isClosing: false,\n        })\n\n        this.superFocus.cancel()\n        this.savedActiveElement.focus()\n\n        this.el.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: true,\n      })\n\n      this.superFocus.cancel()\n      this.savedActiveElement.focus()\n\n      resolve()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.removeEventListener('keydown', this.handleKeyDownInModal)\n\n    if (manualClose) {\n      if (this.opts.browserBackButtonClose) {\n        // Make sure that the latest entry in the history state is our modal name\n        // eslint-disable-next-line no-restricted-globals\n        if (history.state?.[this.modalName]) {\n          // Go back in history to clear out the entry we created (ultimately closing the modal)\n          // eslint-disable-next-line no-restricted-globals\n          history.back()\n        }\n      }\n    }\n\n    this.uppy.emit('dashboard:modal-closed')\n\n    return promise\n  }\n\n  isModalOpen = () => {\n    return !this.getPluginState().isHidden || false\n  }\n\n  requestCloseModal = () => {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    }\n    return this.closeModal()\n  }\n\n  setDarkModeCapability = (isDarkModeOn) => {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        darkMode: isDarkModeOn,\n      },\n    })\n  }\n\n  handleSystemDarkModeChange = (event) => {\n    const isDarkModeOnNow = event.matches\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnNow ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnNow)\n  }\n\n  toggleFileCard = (show, fileID) => {\n    const file = this.uppy.getFile(fileID)\n    if (show) {\n      this.uppy.emit('dashboard:file-edit-start', file)\n    } else {\n      this.uppy.emit('dashboard:file-edit-complete', file)\n    }\n\n    this.setPluginState({\n      fileCardFor: show ? fileID : null,\n      activeOverlayType: show ? 'FileCard' : null,\n    })\n  }\n\n  toggleAddFilesPanel = (show) => {\n    this.setPluginState({\n      showAddFilesPanel: show,\n      activeOverlayType: show ? 'AddFiles' : null,\n    })\n  }\n\n  addFiles = (files) => {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || file.webkitRelativePath || null,\n      },\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err)\n    }\n  }\n\n  // ___Why make insides of Dashboard invisible until first ResizeObserver event is emitted?\n  //    ResizeOberserver doesn't emit the first resize event fast enough, users can see the jump from one .uppy-size-- to\n  //    another (e.g. in Safari)\n  // ___Why not apply visibility property to .uppy-Dashboard-inner?\n  //    Because ideally, acc to specs, ResizeObserver should see invisible elements as of width 0. So even though applying\n  //    invisibility to .uppy-Dashboard-inner works now, it may not work in the future.\n  startListeningToResize = () => {\n    // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\n    // and update containerWidth/containerHeight in plugin state accordingly.\n    // Emits first event on initialization.\n    this.resizeObserver = new ResizeObserver((entries) => {\n      const uppyDashboardInnerEl = entries[0]\n\n      const { width, height } = uppyDashboardInnerEl.contentRect\n\n      this.uppy.log(`[Dashboard] resized: ${width} / ${height}`, 'debug')\n\n      this.setPluginState({\n        containerWidth: width,\n        containerHeight: height,\n        areInsidesReadyToBeVisible: true,\n      })\n    })\n    this.resizeObserver.observe(this.el.querySelector('.uppy-Dashboard-inner'))\n\n    // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\n    this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(() => {\n      const pluginState = this.getPluginState()\n      const isModalAndClosed = !this.opts.inline && pluginState.isHidden\n      if (\n        // if ResizeObserver hasn't yet fired,\n        !pluginState.areInsidesReadyToBeVisible\n        // and it's not due to the modal being closed\n        && !isModalAndClosed\n      ) {\n        this.uppy.log(\"[Dashboard] resize event didn't fire on time: defaulted to mobile layout\", 'debug')\n\n        this.setPluginState({\n          areInsidesReadyToBeVisible: true,\n        })\n      }\n    }, 1000)\n  }\n\n  stopListeningToResize = () => {\n    this.resizeObserver.disconnect()\n\n    clearTimeout(this.makeDashboardInsidesVisibleAnywayTimeout)\n  }\n\n  // Records whether we have been interacting with uppy right now,\n  // which is then used to determine whether state updates should trigger a refocusing.\n  recordIfFocusedOnUppyRecently = (event) => {\n    if (this.el.contains(event.target)) {\n      this.ifFocusedOnUppyRecently = true\n    } else {\n      this.ifFocusedOnUppyRecently = false\n      // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\n      //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\n      //    previously run superFocus sometimes hits and moves focus back to Uppy.\n      this.superFocus.cancel()\n    }\n  }\n\n  disableAllFocusableElements = (disable) => {\n    const focusableNodes = toArray(this.el.querySelectorAll(FOCUSABLE_ELEMENTS))\n    if (disable) {\n      focusableNodes.forEach((node) => {\n        // save previous tabindex in a data-attribute, to restore when enabling\n        const currentTabIndex = node.getAttribute('tabindex')\n        if (currentTabIndex) {\n          node.dataset.inertTabindex = currentTabIndex // eslint-disable-line no-param-reassign\n        }\n        node.setAttribute('tabindex', '-1')\n      })\n    } else {\n      focusableNodes.forEach((node) => {\n        if ('inertTabindex' in node.dataset) {\n          node.setAttribute('tabindex', node.dataset.inertTabindex)\n        } else {\n          node.removeAttribute('tabindex')\n        }\n      })\n    }\n    this.dashboardIsDisabled = disable\n  }\n\n  updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    // eslint-disable-next-line no-restricted-globals\n    if (!history.state?.[this.modalName]) {\n      // Push to history so that the page is not lost on browser back button press\n      // eslint-disable-next-line no-restricted-globals\n      history.pushState({\n        // eslint-disable-next-line no-restricted-globals\n        ...history.state,\n        [this.modalName]: true,\n      }, '')\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopState, false)\n  }\n\n  handlePopState = (event) => {\n    // Close the modal if the history state no longer contains our modal name\n    if (this.isModalOpen() && (!event.state || !event.state[this.modalName])) {\n      this.closeModal({ manualClose: false })\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry\n    // in the history but the modal is closed, fix the history by removing the\n    // uppy history entry.\n    // This occurs when another entry is added into the history state while the\n    // modal is open, and then the modal gets manually closed.\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (!this.isModalOpen() && event.state?.[this.modalName]) {\n      // eslint-disable-next-line no-restricted-globals\n      history.back()\n    }\n  }\n\n  handleKeyDownInModal = (event) => {\n    // close modal on esc key press\n    if (event.keyCode === ESC_KEY) this.requestCloseModal(event)\n    // trap focus on tab key press\n    if (event.keyCode === TAB_KEY) trapFocus.forModal(event, this.getPluginState().activeOverlayType, this.el)\n  }\n\n  handleClickOutside = () => {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste = (event) => {\n    // Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootPaste(event)\n        plugin.handleRootPaste?.(event)\n      }\n    })\n\n    // Add all dropped files\n    const files = toArray(event.clipboardData.files)\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files pasted')\n      this.addFiles(files)\n    }\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n    const files = toArray(event.target.files)\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files selected through input')\n      this.addFiles(files)\n    }\n  }\n\n  handleDragOver = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    // Check if some plugin can handle the datatransfer without files —\n    // for instance, the Url plugin can import a url\n    const canSomePluginHandleRootDrop = () => {\n      let somePluginCanHandleRootDrop = true\n      this.uppy.iteratePlugins((plugin) => {\n        if (plugin.canHandleRootDrop?.(event)) {\n          somePluginCanHandleRootDrop = true\n        }\n      })\n      return somePluginCanHandleRootDrop\n    }\n\n    // Check if the \"type\" of the datatransfer object includes files\n    const doesEventHaveFiles = () => {\n      const { types } = event.dataTransfer\n      return types.some(type => type === 'Files')\n    }\n\n    // Deny drop, if no plugins can handle datatransfer, there are no files,\n    // or when opts.disabled is set, or new uploads are not allowed\n    const somePluginCanHandleRootDrop = canSomePluginHandleRootDrop(event)\n    const hasFiles = doesEventHaveFiles(event)\n    if (\n      (!somePluginCanHandleRootDrop && !hasFiles)\n      || this.opts.disabled\n      // opts.disableLocalFiles should only be taken into account if no plugins\n      // can handle the datatransfer\n      || (this.opts.disableLocalFiles && (hasFiles || !somePluginCanHandleRootDrop))\n      || !this.uppy.getState().allowNewUpload\n    ) {\n      event.dataTransfer.dropEffect = 'none' // eslint-disable-line no-param-reassign\n      clearTimeout(this.removeDragOverClassTimeout)\n      return\n    }\n\n    // Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the\n    // browser, https://github.com/transloadit/uppy/issues/1978).\n    event.dataTransfer.dropEffect = 'copy' // eslint-disable-line no-param-reassign\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    this.setPluginState({ isDraggingOver: true })\n\n    this.opts.onDragOver?.(event)\n  }\n\n  handleDragLeave = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({ isDraggingOver: false })\n    }, 50)\n\n    this.opts.onDragLeave?.(event)\n  }\n\n  handleDrop = async (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    clearTimeout(this.removeDragOverClassTimeout)\n\n    this.setPluginState({ isDraggingOver: false })\n\n    // Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootDrop(event)\n        plugin.handleRootDrop?.(event)\n      }\n    })\n\n    // Add all dropped files\n    let executedDropErrorOnce = false\n    const logDropError = (error) => {\n      this.uppy.log(error, 'error')\n\n      // In practice all drop errors are most likely the same,\n      // so let's just show one to avoid overwhelming the user\n      if (!executedDropErrorOnce) {\n        this.uppy.info(error.message, 'error')\n        executedDropErrorOnce = true\n      }\n    }\n\n    // Add all dropped files\n    const files = await getDroppedFiles(event.dataTransfer, { logDropError })\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files dropped')\n      this.addFiles(files)\n    }\n\n    this.opts.onDrop?.(event)\n  }\n\n  handleRequestThumbnail = (file) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:request', file)\n    }\n  }\n\n  /**\n   * We cancel thumbnail requests when a file item component unmounts to avoid\n   * clogging up the queue when the user scrolls past many elements.\n   */\n  handleCancelThumbnail = (file) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:cancel', file)\n    }\n  }\n\n  handleKeyDownInInline = (event) => {\n    // Trap focus on tab key press.\n    if (event.keyCode === TAB_KEY) trapFocus.forInline(event, this.getPluginState().activeOverlayType, this.el)\n  }\n\n  // ___Why do we listen to the 'paste' event on a document instead of onPaste={props.handlePaste} prop,\n  //    or this.el.addEventListener('paste')?\n  //    Because (at least) Chrome doesn't handle paste if focus is on some button, e.g. 'My Device'.\n  //    => Therefore, the best option is to listen to all 'paste' events, and only react to them when we are focused on our\n  //       particular Uppy instance.\n  // ___Why do we still need onPaste={props.handlePaste} for the DashboardUi?\n  //    Because if we click on the 'Drop files here' caption e.g., `document.activeElement` will be 'body'. Which means our\n  //    standard determination of whether we're pasting into our Uppy instance won't work.\n  //    => Therefore, we need a traditional onPaste={props.handlePaste} handler too.\n  handlePasteOnBody = (event) => {\n    const isFocusInOverlay = this.el.contains(document.activeElement)\n    if (isFocusInOverlay) {\n      this.handlePaste(event)\n    }\n  }\n\n  handleComplete = ({ failed }) => {\n    if (this.opts.closeAfterFinish && failed.length === 0) {\n      // All uploads are done\n      this.requestCloseModal()\n    }\n  }\n\n  handleCancelRestore = () => {\n    this.uppy.emit('restore-canceled')\n  }\n\n  #openFileEditorWhenFilesAdded = (files) => {\n    const firstFile = files[0]\n    if (this.canEditFile(firstFile)) {\n      this.openFileEditor(firstFile)\n    }\n  }\n\n  initEvents = () => {\n    // Modal open button\n    if (this.opts.trigger && !this.opts.inline) {\n      const showModalTrigger = findAllDOMElements(this.opts.trigger)\n      if (showModalTrigger) {\n        showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n      } else {\n        this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning')\n      }\n    }\n\n    this.startListeningToResize()\n    document.addEventListener('paste', this.handlePasteOnBody)\n\n    this.uppy.on('plugin-remove', this.removeTarget)\n    this.uppy.on('file-added', this.hideAllPanels)\n    this.uppy.on('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.on('file-editor:complete', this.hideAllPanels)\n    this.uppy.on('complete', this.handleComplete)\n\n    // ___Why fire on capture?\n    //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\n    document.addEventListener('focus', this.recordIfFocusedOnUppyRecently, true)\n    document.addEventListener('click', this.recordIfFocusedOnUppyRecently, true)\n\n    if (this.opts.inline) {\n      this.el.addEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpenFileEditor) {\n      this.uppy.on('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  removeEvents = () => {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    this.stopListeningToResize()\n    document.removeEventListener('paste', this.handlePasteOnBody)\n\n    window.removeEventListener('popstate', this.handlePopState, false)\n    this.uppy.off('plugin-remove', this.removeTarget)\n    this.uppy.off('file-added', this.hideAllPanels)\n    this.uppy.off('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.off('file-editor:complete', this.hideAllPanels)\n    this.uppy.off('complete', this.handleComplete)\n\n    document.removeEventListener('focus', this.recordIfFocusedOnUppyRecently)\n    document.removeEventListener('click', this.recordIfFocusedOnUppyRecently)\n\n    if (this.opts.inline) {\n      this.el.removeEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpenFileEditor) {\n      this.uppy.off('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  superFocusOnEachUpdate = () => {\n    const isFocusInUppy = this.el.contains(document.activeElement)\n    // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\n    const isFocusNowhere = document.activeElement === document.body || document.activeElement === null\n    const isInformerHidden = this.uppy.getState().info.length === 0\n    const isModal = !this.opts.inline\n\n    if (\n      // If update is connected to showing the Informer - let the screen reader calmly read it.\n      isInformerHidden\n      && (\n        // If we are in a modal - always superfocus without concern for other elements\n        // on the page (user is unlikely to want to interact with the rest of the page)\n        isModal\n        // If we are already inside of Uppy, or\n        || isFocusInUppy\n        // If we are not focused on anything BUT we have already, at least once, focused on uppy\n        //   1. We focus when isFocusNowhere, because when the element we were focused\n        //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\n        //      something somewhere else on the page, - focus won't be 'nowhere'.\n        //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\n        //      to avoid focus jumps if we do something else on the page.\n        //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\n        //                     when file is uploading, - navigate via tab to the checkbox,\n        //                     try to press space multiple times. Focus will jump to Uppy.\n        || (isFocusNowhere && this.ifFocusedOnUppyRecently)\n      )\n    ) {\n      this.superFocus(this.el, this.getPluginState().activeOverlayType)\n    } else {\n      this.superFocus.cancel()\n    }\n  }\n\n  afterUpdate = () => {\n    if (this.opts.disabled && !this.dashboardIsDisabled) {\n      this.disableAllFocusableElements(true)\n      return\n    }\n\n    if (!this.opts.disabled && this.dashboardIsDisabled) {\n      this.disableAllFocusableElements(false)\n    }\n\n    this.superFocusOnEachUpdate()\n  }\n\n  saveFileCard = (meta, fileID) => {\n    this.uppy.setFileMeta(fileID, meta)\n    this.toggleFileCard(false, fileID)\n  }\n\n  #attachRenderFunctionToTarget = (target) => {\n    const plugin = this.uppy.getPlugin(target.id)\n    return {\n      ...target,\n      icon: plugin.icon || this.opts.defaultPickerIcon,\n      render: plugin.render,\n    }\n  }\n\n  #isTargetSupported = (target) => {\n    const plugin = this.uppy.getPlugin(target.id)\n    // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n    if (typeof plugin.isSupported !== 'function') {\n      return true\n    }\n    return plugin.isSupported()\n  }\n\n  #getAcquirers = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'acquirer' && this.#isTargetSupported(target))\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getProgressIndicators = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'progressindicator')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getEditors = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'editor')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  render = (state) => {\n    const pluginState = this.getPluginState()\n    const { files, capabilities, allowNewUpload } = state\n    const {\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n    } = this.uppy.getObjectOfFilesPerState()\n\n    const acquirers = this.#getAcquirers(pluginState.targets)\n    const progressindicators = this.#getProgressIndicators(pluginState.targets)\n    const editors = this.#getEditors(pluginState.targets)\n\n    let theme\n    if (this.opts.theme === 'auto') {\n      theme = capabilities.darkMode ? 'dark' : 'light'\n    } else {\n      theme = this.opts.theme\n    }\n\n    if (['files', 'folders', 'both'].indexOf(this.opts.fileManagerSelectionType) < 0) {\n      this.opts.fileManagerSelectionType = 'files'\n      // eslint-disable-next-line no-console\n      console.warn(`Unsupported option for \"fileManagerSelectionType\". Using default of \"${this.opts.fileManagerSelectionType}\".`)\n    }\n\n    return DashboardUI({\n      state,\n      isHidden: pluginState.isHidden,\n      files,\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      allowNewUpload,\n      acquirers,\n      theme,\n      disabled: this.opts.disabled,\n      disableLocalFiles: this.opts.disableLocalFiles,\n      direction: this.opts.direction,\n      activePickerPanel: pluginState.activePickerPanel,\n      showFileEditor: pluginState.showFileEditor,\n      saveFileEditor: this.saveFileEditor,\n      disableAllFocusableElements: this.disableAllFocusableElements,\n      animateOpenClose: this.opts.animateOpenClose,\n      isClosing: pluginState.isClosing,\n      progressindicators,\n      editors,\n      autoProceed: this.uppy.opts.autoProceed,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      i18n: this.i18n,\n      i18nArray: this.i18nArray,\n      uppy: this.uppy,\n      note: this.opts.note,\n      recoveredState: state.recoveredState,\n      metaFields: pluginState.metaFields,\n      resumableUploads: capabilities.resumableUploads || false,\n      individualCancellation: capabilities.individualCancellation,\n      isMobileDevice: capabilities.isMobileDevice,\n      fileCardFor: pluginState.fileCardFor,\n      toggleFileCard: this.toggleFileCard,\n      toggleAddFilesPanel: this.toggleAddFilesPanel,\n      showAddFilesPanel: pluginState.showAddFilesPanel,\n      saveFileCard: this.saveFileCard,\n      openFileEditor: this.openFileEditor,\n      canEditFile: this.canEditFile,\n      width: this.opts.width,\n      height: this.opts.height,\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n      fileManagerSelectionType: this.opts.fileManagerSelectionType,\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n      hideCancelButton: this.opts.hideCancelButton,\n      hideRetryButton: this.opts.hideRetryButton,\n      hidePauseResumeButton: this.opts.hidePauseResumeButton,\n      showRemoveButtonAfterComplete: this.opts.showRemoveButtonAfterComplete,\n      containerWidth: pluginState.containerWidth,\n      containerHeight: pluginState.containerHeight,\n      areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\n      isTargetDOMEl: this.isTargetDOMEl,\n      parentElement: this.el,\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles,\n      requiredMetaFields: this.uppy.opts.restrictions.requiredMetaFields,\n      showSelectedFiles: this.opts.showSelectedFiles,\n      handleCancelRestore: this.handleCancelRestore,\n      handleRequestThumbnail: this.handleRequestThumbnail,\n      handleCancelThumbnail: this.handleCancelThumbnail,\n      // drag props\n      isDraggingOver: pluginState.isDraggingOver,\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleDrop: this.handleDrop,\n    })\n  }\n\n  discoverProviderPlugins = () => {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  install = () => {\n    // Set default state for Dashboard\n    this.setPluginState({\n      isHidden: true,\n      fileCardFor: null,\n      activeOverlayType: null,\n      showAddFilesPanel: false,\n      activePickerPanel: false,\n      showFileEditor: false,\n      metaFields: this.opts.metaFields,\n      targets: [],\n      // We'll make them visible once .containerWidth is determined\n      areInsidesReadyToBeVisible: false,\n      isDraggingOver: false,\n    })\n\n    const { inline, closeAfterFinish } = this.opts\n    if (inline && closeAfterFinish) {\n      throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.')\n    }\n\n    const { allowMultipleUploads, allowMultipleUploadBatches } = this.uppy.opts\n    if ((allowMultipleUploads || allowMultipleUploadBatches) && closeAfterFinish) {\n      this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning')\n    }\n\n    const { target } = this.opts\n\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) {\n        plugin.mount(this, plugin)\n      }\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        id: `${this.id}:StatusBar`,\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        hideRetryButton: this.opts.hideRetryButton,\n        hidePauseResumeButton: this.opts.hidePauseResumeButton,\n        hideCancelButton: this.opts.hideCancelButton,\n        showProgressDetails: this.opts.showProgressDetails,\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\n        locale: this.opts.locale,\n        doneButtonHandler: this.opts.doneButtonHandler,\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        id: `${this.id}:Informer`,\n        target: this,\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        id: `${this.id}:ThumbnailGenerator`,\n        thumbnailWidth: this.opts.thumbnailWidth,\n        thumbnailHeight: this.opts.thumbnailHeight,\n        thumbnailType: this.opts.thumbnailType,\n        waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload,\n        // If we don't block on thumbnails, we can lazily generate them\n        lazy: !this.opts.waitForThumbnailsBeforeUpload,\n      })\n    }\n\n    // Dark Mode / theme\n    this.darkModeMediaQuery = (typeof window !== 'undefined' && window.matchMedia)\n      ? window.matchMedia('(prefers-color-scheme: dark)')\n      : null\n\n    const isDarkModeOnFromTheStart = this.darkModeMediaQuery ? this.darkModeMediaQuery.matches : false\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnFromTheStart ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnFromTheStart)\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery.addListener(this.handleSystemDarkModeChange)\n    }\n\n    this.discoverProviderPlugins()\n    this.initEvents()\n  }\n\n  uninstall = () => {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin(`${this.id}:Informer`)\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`)\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`)\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery.removeListener(this.handleSystemDarkModeChange)\n    }\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}