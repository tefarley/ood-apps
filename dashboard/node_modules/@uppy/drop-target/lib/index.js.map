{"version":3,"sources":["index.js"],"names":["BasePlugin","getDroppedFiles","toArray","packageJson","isFileTransfer","event","dataTransfer","types","some","type","DropTarget","constructor","uppy","opts","addFiles","files","descriptors","map","file","source","id","name","data","meta","relativePath","err","log","handleDrop","preventDefault","stopPropagation","clearTimeout","removeDragOverClassTimeout","currentTarget","classList","remove","setPluginState","isDraggingOver","iteratePlugins","plugin","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","length","onDrop","handleDragOver","dropEffect","add","onDragOver","handleDragLeave","setTimeout","onDragLeave","addListeners","target","Element","nodes","document","querySelectorAll","Error","forEach","node","addEventListener","removeListeners","removeEventListener","title","defaultOpts","install","uninstall","VERSION","version"],"mappings":"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","sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin'\nimport getDroppedFiles from '@uppy/utils/lib/getDroppedFiles'\nimport toArray from '@uppy/utils/lib/toArray'\n\nimport packageJson from '../package.json'\n\nfunction isFileTransfer (event) {\n  return event.dataTransfer.types?.some((type) => type === 'Files') ?? false\n}\n\n/**\n * Drop Target plugin\n *\n */\nexport default class DropTarget extends BasePlugin {\n  static VERSION = packageJson.version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'DropTarget'\n    this.title = 'Drop Target'\n\n    // Default options\n    const defaultOpts = {\n      target: null,\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = { ...defaultOpts, ...opts }\n    this.removeDragOverClassTimeout = null\n  }\n\n  addFiles = (files) => {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null,\n      },\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err)\n    }\n  }\n\n  isFileTransfer = isFileTransfer // TODO: expose this as a static instead (or don't expose it at all) in the next major.\n\n  handleDrop = async (event) => {\n    if (!this.isFileTransfer(event)) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n    clearTimeout(this.removeDragOverClassTimeout)\n\n    // Remove dragover class\n    event.currentTarget.classList.remove('uppy-is-drag-over')\n    this.setPluginState({ isDraggingOver: false })\n\n    // Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootDrop(event)\n        plugin.handleRootDrop?.(event)\n      }\n    })\n\n    // Add all dropped files, handle errors\n    let executedDropErrorOnce = false\n    const logDropError = (error) => {\n      this.uppy.log(error, 'error')\n\n      // In practice all drop errors are most likely the same,\n      // so let's just show one to avoid overwhelming the user\n      if (!executedDropErrorOnce) {\n        this.uppy.info(error.message, 'error')\n        executedDropErrorOnce = true\n      }\n    }\n\n    const files = await getDroppedFiles(event.dataTransfer, { logDropError })\n    if (files.length > 0) {\n      this.uppy.log('[DropTarget] Files were dropped')\n      this.addFiles(files)\n    }\n\n    this.opts.onDrop?.(event)\n  }\n\n  handleDragOver = (event) => {\n    if (!this.isFileTransfer(event)) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    // Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the browser,\n    // https://github.com/transloadit/uppy/issues/1978)\n    event.dataTransfer.dropEffect = 'copy' // eslint-disable-line no-param-reassign\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    event.currentTarget.classList.add('uppy-is-drag-over')\n    this.setPluginState({ isDraggingOver: true })\n    this.opts.onDragOver?.(event)\n  }\n\n  handleDragLeave = (event) => {\n    if (!this.isFileTransfer(event)) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    const { currentTarget } = event\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      currentTarget.classList.remove('uppy-is-drag-over')\n      this.setPluginState({ isDraggingOver: false })\n    }, 50)\n    this.opts.onDragLeave?.(event)\n  }\n\n  addListeners = () => {\n    const { target } = this.opts\n\n    if (target instanceof Element) {\n      this.nodes = [target]\n    } else if (typeof target === 'string') {\n      this.nodes = toArray(document.querySelectorAll(target))\n    }\n\n    if (!this.nodes && !this.nodes.length > 0) {\n      throw new Error(`\"${target}\" does not match any HTML elements`)\n    }\n\n    this.nodes.forEach((node) => {\n      node.addEventListener('dragover', this.handleDragOver, false)\n      node.addEventListener('dragleave', this.handleDragLeave, false)\n      node.addEventListener('drop', this.handleDrop, false)\n    })\n  }\n\n  removeListeners = () => {\n    if (this.nodes) {\n      this.nodes.forEach((node) => {\n        node.removeEventListener('dragover', this.handleDragOver, false)\n        node.removeEventListener('dragleave', this.handleDragLeave, false)\n        node.removeEventListener('drop', this.handleDrop, false)\n      })\n    }\n  }\n\n  install () {\n    this.setPluginState({ isDraggingOver: false })\n    this.addListeners()\n  }\n\n  uninstall () {\n    this.removeListeners()\n  }\n}\n"]}