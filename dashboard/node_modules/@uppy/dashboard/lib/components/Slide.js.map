{"version":3,"sources":["Slide.jsx"],"names":["classNames","transitionName","duration","Slide","Component","constructor","props","state","cachedChildren","className","componentWillUpdate","nextProps","child","children","patch","cancelAnimationFrame","animationFrame","clearTimeout","leaveTimeout","undefined","requestAnimationFrame","setState","enterTimeout","setTimeout","render"],"mappings":";;AAAA;;MACOA,U;;AAEP,MAAMC,cAAc,GAAG,6BAAvB;AACA,MAAMC,QAAQ,GAAG,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAN,SAAoBC,iBAApB,CAA8B;AAC5BC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID,GAR2B,CAU5B;AACA;;;AACAC,EAAAA,mBAAmB,CAAEC,SAAF,EAAa;AAC9B,UAAM;AAAEH,MAAAA;AAAF,QAAqB,KAAKD,KAAhC;AACA,UAAMK,KAAK,GAAG,0BAAaD,SAAS,CAACE,QAAvB,EAAiC,CAAjC,CAAd;AAEA,QAAIL,cAAc,KAAKI,KAAvB,EAA8B,OAAO,IAAP;AAE9B,UAAME,KAAK,GAAG;AACZN,MAAAA,cAAc,EAAEI;AADJ,KAAd,CAN8B,CAU9B;;AACA,QAAIA,KAAK,IAAI,CAACJ,cAAd,EAA8B;AAC5BM,MAAAA,KAAK,CAACL,SAAN,GAAmB,GAAER,cAAe,QAApC;AAEAc,MAAAA,oBAAoB,CAAC,KAAKC,cAAN,CAApB;AACAC,MAAAA,YAAY,CAAC,KAAKC,YAAN,CAAZ;AACA,WAAKA,YAAL,GAAoBC,SAApB;AAEA,WAAKH,cAAL,GAAsBI,qBAAqB,CAAC,MAAM;AAChD;AACA;AAEA,aAAKC,QAAL,CAAc;AACZZ,UAAAA,SAAS,EAAG,GAAER,cAAe,UAASA,cAAe;AADzC,SAAd;AAIA,aAAKqB,YAAL,GAAoBC,UAAU,CAAC,MAAM;AACnC,eAAKF,QAAL,CAAc;AAAEZ,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD,SAF6B,EAE3BP,QAF2B,CAA9B;AAGD,OAX0C,CAA3C;AAYD,KA9B6B,CAgC9B;;;AACA,QAAIM,cAAc,IAAI,CAACI,KAAnB,IAA4B,KAAKM,YAAL,KAAsBC,SAAtD,EAAiE;AAC/DL,MAAAA,KAAK,CAACN,cAAN,GAAuBA,cAAvB;AACAM,MAAAA,KAAK,CAACL,SAAN,GAAmB,GAAER,cAAe,QAApC;AAEAc,MAAAA,oBAAoB,CAAC,KAAKC,cAAN,CAApB;AACAC,MAAAA,YAAY,CAAC,KAAKK,YAAN,CAAZ;AACA,WAAKA,YAAL,GAAoBH,SAApB;AACA,WAAKH,cAAL,GAAsBI,qBAAqB,CAAC,MAAM;AAChD,aAAKC,QAAL,CAAc;AACZZ,UAAAA,SAAS,EAAG,GAAER,cAAe,UAASA,cAAe;AADzC,SAAd;AAIA,aAAKiB,YAAL,GAAoBK,UAAU,CAAC,MAAM;AACnC,eAAKF,QAAL,CAAc;AACZb,YAAAA,cAAc,EAAE,IADJ;AAEZC,YAAAA,SAAS,EAAE;AAFC,WAAd;AAID,SAL6B,EAK3BP,QAL2B,CAA9B;AAMD,OAX0C,CAA3C;AAYD,KApD6B,CAsD9B;;;AACA,SAAKmB,QAAL,CAAcP,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEhB,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAgC,KAAKF,KAA3C;;AAEA,QAAI,CAACC,cAAL,EAAqB;AACnB,aAAO,IAAP;AACD;;AAED,WAAO,0BAAaA,cAAb,EAA6B;AAClCC,MAAAA,SAAS,EAAET,UAAU,CAACS,SAAD,EAAYD,cAAc,CAACF,KAAf,CAAqBG,SAAjC;AADa,KAA7B,CAAP;AAGD;;AAhF2B;;iBAmFfN,K","sourcesContent":["import {  cloneElement, Component, toChildArray  } from 'preact'\nimport classNames from 'classnames'\n\nconst transitionName = 'uppy-transition-slideDownUp'\nconst duration = 250\n\n/**\n * Vertical slide transition.\n *\n * This can take a _single_ child component, which _must_ accept a `className` prop.\n *\n * Currently this is specific to the `uppy-transition-slideDownUp` transition,\n * but it should be simple to extend this for any type of single-element\n * transition by setting the CSS name and duration as props.\n */\nclass Slide extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      cachedChildren: null,\n      className: '',\n    }\n  }\n\n  // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n  componentWillUpdate (nextProps) {\n    const { cachedChildren } = this.state\n    const child = toChildArray(nextProps.children)[0]\n\n    if (cachedChildren === child) return null\n\n    const patch = {\n      cachedChildren: child,\n    }\n\n    // Enter transition\n    if (child && !cachedChildren) {\n      patch.className = `${transitionName}-enter`\n\n      cancelAnimationFrame(this.animationFrame)\n      clearTimeout(this.leaveTimeout)\n      this.leaveTimeout = undefined\n\n      this.animationFrame = requestAnimationFrame(() => {\n        // Force it to render before we add the active class\n        // this.base.getBoundingClientRect()\n\n        this.setState({\n          className: `${transitionName}-enter ${transitionName}-enter-active`,\n        })\n\n        this.enterTimeout = setTimeout(() => {\n          this.setState({ className: '' })\n        }, duration)\n      })\n    }\n\n    // Leave transition\n    if (cachedChildren && !child && this.leaveTimeout === undefined) {\n      patch.cachedChildren = cachedChildren\n      patch.className = `${transitionName}-leave`\n\n      cancelAnimationFrame(this.animationFrame)\n      clearTimeout(this.enterTimeout)\n      this.enterTimeout = undefined\n      this.animationFrame = requestAnimationFrame(() => {\n        this.setState({\n          className: `${transitionName}-leave ${transitionName}-leave-active`,\n        })\n\n        this.leaveTimeout = setTimeout(() => {\n          this.setState({\n            cachedChildren: null,\n            className: '',\n          })\n        }, duration)\n      })\n    }\n\n    // eslint-disable-next-line\n    this.setState(patch)\n  }\n\n  render () {\n    const { cachedChildren, className } = this.state\n\n    if (!cachedChildren) {\n      return null\n    }\n\n    return cloneElement(cachedChildren, {\n      className: classNames(className, cachedChildren.props.className),\n    })\n  }\n}\n\nexport default Slide\n"]}