{"version":3,"sources":["ServiceWorkerStore.js"],"names":["isSupported","navigator","waitForServiceWorker","Promise","resolve","reject","Error","serviceWorker","controller","addEventListener","ServiceWorkerStore","constructor","opts","ready","name","storeName","list","defer","promise","onMessage","event","data","store","type","files","removeEventListener","then","postMessage","put","file","delete","fileID"],"mappings":";;AAAA,MAAMA,WAAW,GAAG,OAAOC,SAAP,KAAqB,WAArB,IAAoC,mBAAmBA,SAA3E;;AAEA,SAASC,oBAAT,GAAiC;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAI,CAACL,WAAL,EAAkB;AAChBK,MAAAA,MAAM,CAAC,IAAIC,KAAJ,CAAU,aAAV,CAAD,CAAN;AACD,KAFD,MAEO,IAAIL,SAAS,CAACM,aAAV,CAAwBC,UAA5B,EAAwC;AAC7C;AACAJ,MAAAA,OAAO;AACR,KAHM,MAGA;AACLH,MAAAA,SAAS,CAACM,aAAV,CAAwBE,gBAAxB,CAAyC,kBAAzC,EAA6D,MAAM;AACjEL,QAAAA,OAAO;AACR,OAFD;AAGD;AACF,GAXM,CAAP;AAYD;;AAED,MAAMM,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAAEC,IAAF,EAAQ;AACjB,SAAKC,KAAL,GAAaX,oBAAoB,EAAjC;AACA,SAAKY,IAAL,GAAYF,IAAI,CAACG,SAAjB;AACD;;AAEDC,EAAAA,IAAI,GAAI;AACN,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,OAAO,GAAG,IAAIf,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CY,MAAAA,KAAK,CAACb,OAAN,GAAgBA,OAAhB;AACAa,MAAAA,KAAK,CAACZ,MAAN,GAAeA,MAAf;AACD,KAHe,CAAhB;;AAKA,UAAMc,SAAS,GAAIC,KAAD,IAAW;AAC3B,UAAIA,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB,KAAKR,IAA9B,EAAoC;AAClC;AACD;;AACD,cAAQM,KAAK,CAACC,IAAN,CAAWE,IAAnB;AACE,aAAK,gBAAL;AACEN,UAAAA,KAAK,CAACb,OAAN,CAAcgB,KAAK,CAACC,IAAN,CAAWG,KAAzB;AACAvB,UAAAA,SAAS,CAACM,aAAV,CAAwBkB,mBAAxB,CAA4C,SAA5C,EAAuDN,SAAvD;AACA;;AACF;AACEF,UAAAA,KAAK,CAACZ,MAAN;AANJ;AAQD,KAZD;;AAcA,SAAKQ,KAAL,CAAWa,IAAX,CAAgB,MAAM;AACpBzB,MAAAA,SAAS,CAACM,aAAV,CAAwBE,gBAAxB,CAAyC,SAAzC,EAAoDU,SAApD;AAEAlB,MAAAA,SAAS,CAACM,aAAV,CAAwBC,UAAxB,CAAmCmB,WAAnC,CAA+C;AAC7CJ,QAAAA,IAAI,EAAE,gBADuC;AAE7CD,QAAAA,KAAK,EAAE,KAAKR;AAFiC,OAA/C;AAID,KAPD;AASA,WAAOI,OAAP;AACD;;AAEDU,EAAAA,GAAG,CAAEC,IAAF,EAAQ;AACT,WAAO,KAAKhB,KAAL,CAAWa,IAAX,CAAgB,MAAM;AAC3BzB,MAAAA,SAAS,CAACM,aAAV,CAAwBC,UAAxB,CAAmCmB,WAAnC,CAA+C;AAC7CJ,QAAAA,IAAI,EAAE,eADuC;AAE7CD,QAAAA,KAAK,EAAE,KAAKR,IAFiC;AAG7Ce,QAAAA;AAH6C,OAA/C;AAKD,KANM,CAAP;AAOD;;AAEDC,EAAAA,MAAM,CAAEC,MAAF,EAAU;AACd,WAAO,KAAKlB,KAAL,CAAWa,IAAX,CAAgB,MAAM;AAC3BzB,MAAAA,SAAS,CAACM,aAAV,CAAwBC,UAAxB,CAAmCmB,WAAnC,CAA+C;AAC7CJ,QAAAA,IAAI,EAAE,kBADuC;AAE7CD,QAAAA,KAAK,EAAE,KAAKR,IAFiC;AAG7CiB,QAAAA;AAH6C,OAA/C;AAKD,KANM,CAAP;AAOD;;AAzDsB;;AA4DzBrB,kBAAkB,CAACV,WAAnB,GAAiCA,WAAjC;iBAEeU,kB","sourcesContent":["const isSupported = typeof navigator !== 'undefined' && 'serviceWorker' in navigator\n\nfunction waitForServiceWorker () {\n  return new Promise((resolve, reject) => {\n    if (!isSupported) {\n      reject(new Error('Unsupported'))\n    } else if (navigator.serviceWorker.controller) {\n      // A serviceWorker is already registered and active.\n      resolve()\n    } else {\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        resolve()\n      })\n    }\n  })\n}\n\nclass ServiceWorkerStore {\n  constructor (opts) {\n    this.ready = waitForServiceWorker()\n    this.name = opts.storeName\n  }\n\n  list () {\n    const defer = {}\n    const promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve\n      defer.reject = reject\n    })\n\n    const onMessage = (event) => {\n      if (event.data.store !== this.name) {\n        return\n      }\n      switch (event.data.type) {\n        case 'uppy/ALL_FILES':\n          defer.resolve(event.data.files)\n          navigator.serviceWorker.removeEventListener('message', onMessage)\n          break\n        default:\n          defer.reject()\n      }\n    }\n\n    this.ready.then(() => {\n      navigator.serviceWorker.addEventListener('message', onMessage)\n\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/GET_FILES',\n        store: this.name,\n      })\n    })\n\n    return promise\n  }\n\n  put (file) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/ADD_FILE',\n        store: this.name,\n        file,\n      })\n    })\n  }\n\n  delete (fileID) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/REMOVE_FILE',\n        store: this.name,\n        fileID,\n      })\n    })\n  }\n}\n\nServiceWorkerStore.isSupported = isSupported\n\nexport default ServiceWorkerStore\n"]}