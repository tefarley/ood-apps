{"version":3,"sources":["index.jsx"],"names":["classNames","getFileTypeIcon","ignoreEvent","FilePreview","FileCard","Component","constructor","props","form","document","createElement","updateMeta","newVal","name","setState","formState","handleSave","e","preventDefault","fileID","fileCardFor","saveFileCard","state","handleCancel","file","files","uppy","emit","toggleFileCard","saveOnEnter","ev","keyCode","stopPropagation","id","renderMetaFields","metaFields","getMetaFields","fieldCSSClasses","text","map","field","required","requiredMetaFields","includes","render","undefined","value","onChange","h","type","placeholder","HTMLInputElement","prototype","target","storedMetaData","forEach","meta","componentWillMount","addEventListener","body","appendChild","componentWillUnmount","removeEventListener","removeChild","showEditButton","canEditFile","className","i18nArray","i18n","backgroundColor","color","event","openFileEditor","HTMLButtonElement"],"mappings":"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","sourcesContent":["import {  h, Component  } from 'preact'\nimport classNames from 'classnames'\nimport {  nanoid  } from 'nanoid/non-secure'\nimport getFileTypeIcon from '../../utils/getFileTypeIcon.jsx'\nimport ignoreEvent from '../../utils/ignoreEvent.js'\nimport FilePreview from '../FilePreview.jsx'\n\nclass FileCard extends Component {\n  form = document.createElement('form')\n\n  constructor (props) {\n    super(props)\n\n    const file = this.props.files[this.props.fileCardFor]\n    const metaFields = this.getMetaFields() || []\n\n    const storedMetaData = {}\n    metaFields.forEach((field) => {\n      storedMetaData[field.id] = file.meta[field.id] || ''\n    })\n\n    this.state = {\n      formState: storedMetaData,\n    }\n\n    this.form.id = nanoid()\n  }\n\n  // TODO(aduh95): move this to `UNSAFE_componentWillMount` when updating to Preact X+.\n  componentWillMount () { // eslint-disable-line react/no-deprecated\n    this.form.addEventListener('submit', this.handleSave)\n    document.body.appendChild(this.form)\n  }\n\n  componentWillUnmount () {\n    this.form.removeEventListener('submit', this.handleSave)\n    document.body.removeChild(this.form)\n  }\n\n  getMetaFields () {\n    return typeof this.props.metaFields === 'function'\n      ? this.props.metaFields(this.props.files[this.props.fileCardFor])\n      : this.props.metaFields\n  }\n\n  updateMeta = (newVal, name) => {\n    this.setState(({ formState }) => ({\n      formState: {\n        ...formState,\n        [name]: newVal,\n      },\n    }))\n  }\n\n  handleSave = (e) => {\n    e.preventDefault()\n    const fileID = this.props.fileCardFor\n    this.props.saveFileCard(this.state.formState, fileID)\n  }\n\n  handleCancel = () => {\n    const file = this.props.files[this.props.fileCardFor]\n    this.props.uppy.emit('file-editor:cancel', file)\n    this.props.toggleFileCard(false)\n  }\n\n  saveOnEnter = (ev) => {\n    if (ev.keyCode === 13) {\n      ev.stopPropagation()\n      ev.preventDefault()\n      const file = this.props.files[this.props.fileCardFor]\n      this.props.saveFileCard(this.state.formState, file.id)\n    }\n  }\n\n  renderMetaFields = () => {\n    const metaFields = this.getMetaFields() || []\n    const fieldCSSClasses = {\n      text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input',\n    }\n\n    return metaFields.map((field) => {\n      const id = `uppy-Dashboard-FileCard-input-${field.id}`\n      const required = this.props.requiredMetaFields.includes(field.id)\n      return (\n        <fieldset key={field.id} className=\"uppy-Dashboard-FileCard-fieldset\">\n          <label className=\"uppy-Dashboard-FileCard-label\" htmlFor={id}>{field.name}</label>\n          {field.render !== undefined\n            ? field.render({\n              value: this.state.formState[field.id],\n              onChange: (newVal) => this.updateMeta(newVal, field.id),\n              fieldCSSClasses,\n              required,\n              form: this.form.id,\n            }, h)\n            : (\n              <input\n                className={fieldCSSClasses.text}\n                id={id}\n                form={this.form.id}\n                type={field.type || 'text'}\n                required={required}\n                value={this.state.formState[field.id]}\n                placeholder={field.placeholder}\n                // If `form` attribute is not supported, we need to capture pressing Enter to avoid bubbling in case Uppy is\n                // embedded inside a <form>.\n                onKeyUp={'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter}\n                onKeyDown={'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter}\n                onKeyPress={'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter}\n                onInput={ev => this.updateMeta(ev.target.value, field.id)}\n                data-uppy-super-focusable\n              />\n            )}\n        </fieldset>\n      )\n    })\n  }\n\n  render () {\n    const file = this.props.files[this.props.fileCardFor]\n    const showEditButton = this.props.canEditFile(file)\n\n    return (\n      <div\n        className={classNames('uppy-Dashboard-FileCard', this.props.className)}\n        data-uppy-panelType=\"FileCard\"\n        onDragOver={ignoreEvent}\n        onDragLeave={ignoreEvent}\n        onDrop={ignoreEvent}\n        onPaste={ignoreEvent}\n      >\n        <div className=\"uppy-DashboardContent-bar\">\n          <div className=\"uppy-DashboardContent-title\" role=\"heading\" aria-level=\"1\">\n            {this.props.i18nArray('editing', {\n              file: <span className=\"uppy-DashboardContent-titleFile\">{file.meta ? file.meta.name : file.name}</span>,\n            })}\n          </div>\n          <button\n            className=\"uppy-DashboardContent-back\"\n            type=\"button\"\n            form={this.form.id}\n            title={this.props.i18n('finishEditingFile')}\n            onClick={this.handleCancel}\n          >\n            {this.props.i18n('cancel')}\n          </button>\n        </div>\n\n        <div className=\"uppy-Dashboard-FileCard-inner\">\n          <div className=\"uppy-Dashboard-FileCard-preview\" style={{ backgroundColor: getFileTypeIcon(file.type).color }}>\n            <FilePreview file={file} />\n            {showEditButton\n              && (\n              <button\n                type=\"button\"\n                className=\"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\"\n                onClick={(event) => {\n                  // When opening the image editor we want to save any meta fields changes.\n                  // Otherwise it's confusing for the user to click save in the editor,\n                  // but the changes here are discarded. This bypasses validation,\n                  // but we are okay with that.\n                  this.handleSave(event)\n                  this.props.openFileEditor(file)\n                }}\n                form={this.form.id}\n              >\n                {this.props.i18n('editFile')}\n              </button>\n              )}\n          </div>\n\n          <div className=\"uppy-Dashboard-FileCard-info\">\n            {this.renderMetaFields()}\n          </div>\n\n          <div className=\"uppy-Dashboard-FileCard-actions\">\n            <button\n              className=\"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\"\n              // If `form` attribute is supported, we want a submit button to trigger the form validation.\n              // Otherwise, fallback to a classic button with a onClick event handler.\n              type={'form' in HTMLButtonElement.prototype ? 'submit' : 'button'}\n              onClick={'form' in HTMLButtonElement.prototype ? undefined : this.handleSave}\n              form={this.form.id}\n            >\n              {this.props.i18n('saveChanges')}\n            </button>\n            <button\n              className=\"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\"\n              type=\"button\"\n              onClick={this.handleCancel}\n              form={this.form.id}\n            >\n              {this.props.i18n('cancel')}\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FileCard\n"]}