{"version":3,"sources":["Webcam.jsx"],"names":["getFileTypeExtension","mimeTypes","canvasToBlob","supportsMediaRecorder","CameraIcon","CameraScreen","PermissionsScreen","packageJson","locale","toMimeType","fileType","slice","isVideoMimeType","mimeType","test","isImageMimeType","getMediaDevices","navigator","mediaDevices","Webcam","UIPlugin","constructor","uppy","opts","supportsUserMedia","protocol","location","match","id","type","capturedMediaFile","icon","defaultLocale","defaultOptions","onBeforeSnapshot","Promise","resolve","countdown","modes","mirror","showVideoSourceDropdown","facingMode","preferredImageMimeType","preferredVideoMimeType","showRecordingLength","i18nInit","title","i18n","install","bind","setPluginState","render","start","stop","takeSnapshot","startRecording","stopRecording","discardRecordedVideo","submit","oneTwoThreeSmile","focus","changeVideoSource","webcamActive","hasCamera","cameraReady","cameraError","recordingLengthSeconds","videoSources","currentDeviceId","setOptions","newOpts","videoConstraints","hasCameraCheck","enumerateDevices","then","devices","some","device","kind","isAudioOnly","length","getConstraints","deviceId","acceptsAudio","indexOf","acceptsVideo","audio","video","options","reject","Error","constraints","getUserMedia","stream","tracks","getAudioTracks","getVideoTracks","getSettings","forEach","track","updateVideoSources","catch","err","info","message","getMediaRecorderOptions","MediaRecorder","isTypeSupported","restrictions","preferredVideoMimeTypes","allowedFileTypes","map","filter","filterSupportedTypes","candidateType","acceptableMimeTypes","recorder","recordingChunks","stoppingBecauseOfMaxSize","addEventListener","event","push","data","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","recordingLengthTimer","setInterval","currentRecordingLength","getPluginState","isRecording","stopped","clearInterval","getVideo","file","recordedVideo","URL","createObjectURL","isRestriction","log","error","addFile","audioTracks","videoTracks","concat","once","getVideoElement","el","querySelector","count","countDown","captureInProgress","setTimeout","getImage","tagFile","width","videoWidth","height","videoHeight","canvas","document","createElement","ctx","getContext","drawImage","preferredImageMimeTypes","ext","name","Date","now","blob","source","Blob","find","fileExtension","webcamState","target","mount","ondevicechange","restartStream","videoSource","uninstall","unmount","onUnmount","VERSION","version"],"mappings":"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","sourcesContent":["import { h } from 'preact'\n\nimport { UIPlugin } from '@uppy/core'\nimport getFileTypeExtension from '@uppy/utils/lib/getFileTypeExtension'\nimport mimeTypes from '@uppy/utils/lib/mimeTypes'\nimport canvasToBlob from '@uppy/utils/lib/canvasToBlob'\nimport supportsMediaRecorder from './supportsMediaRecorder.js'\nimport CameraIcon from './CameraIcon.jsx'\nimport CameraScreen from './CameraScreen.jsx'\nimport PermissionsScreen from './PermissionsScreen.jsx'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\n/**\n * Normalize a MIME type or file extension into a MIME type.\n *\n * @param {string} fileType - MIME type or a file extension prefixed with `.`.\n * @returns {string|undefined} The MIME type or `undefined` if the fileType is an extension and is not known.\n */\nfunction toMimeType (fileType) {\n  if (fileType[0] === '.') {\n    return mimeTypes[fileType.slice(1)]\n  }\n  return fileType\n}\n\n/**\n * Is this MIME type a video?\n *\n * @param {string} mimeType - MIME type.\n * @returns {boolean}\n */\nfunction isVideoMimeType (mimeType) {\n  return /^video\\/[^*]+$/.test(mimeType)\n}\n\n/**\n * Is this MIME type an image?\n *\n * @param {string} mimeType - MIME type.\n * @returns {boolean}\n */\nfunction isImageMimeType (mimeType) {\n  return /^image\\/[^*]+$/.test(mimeType)\n}\n\nfunction getMediaDevices () {\n  // bug in the compatibility data\n  // eslint-disable-next-line compat/compat\n  return navigator.mediaDevices\n}\n/**\n * Webcam\n */\nexport default class Webcam extends UIPlugin {\n  static VERSION = packageJson.version\n\n  // enableMirror is used to toggle mirroring, for instance when discarding the video,\n  // while `opts.mirror` is used to remember the initial user setting\n  #enableMirror\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.mediaDevices = getMediaDevices()\n    this.supportsUserMedia = !!this.mediaDevices\n    // eslint-disable-next-line no-restricted-globals\n    this.protocol = location.protocol.match(/https/i) ? 'https' : 'http'\n    this.id = this.opts.id || 'Webcam'\n    this.type = 'acquirer'\n    this.capturedMediaFile = null\n    this.icon = () => (\n      <svg aria-hidden=\"true\" focusable=\"false\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <rect className=\"uppy-ProviderIconBg\" fill=\"#03BFEF\" width=\"32\" height=\"32\" rx=\"16\" />\n          <path d=\"M22 11c1.133 0 2 .867 2 2v7.333c0 1.134-.867 2-2 2H10c-1.133 0-2-.866-2-2V13c0-1.133.867-2 2-2h2.333l1.134-1.733C13.6 9.133 13.8 9 14 9h4c.2 0 .4.133.533.267L19.667 11H22zm-6 1.533a3.764 3.764 0 0 0-3.8 3.8c0 2.129 1.672 3.801 3.8 3.801s3.8-1.672 3.8-3.8c0-2.13-1.672-3.801-3.8-3.801zm0 6.261c-1.395 0-2.46-1.066-2.46-2.46 0-1.395 1.065-2.461 2.46-2.461s2.46 1.066 2.46 2.46c0 1.395-1.065 2.461-2.46 2.461z\" fill=\"#FFF\" fillRule=\"nonzero\" />\n        </g>\n      </svg>\n    )\n\n    this.defaultLocale = locale\n\n    // set default options\n    const defaultOptions = {\n      onBeforeSnapshot: () => Promise.resolve(),\n      countdown: false,\n      modes: [\n        'video-audio',\n        'video-only',\n        'audio-only',\n        'picture',\n      ],\n      mirror: true,\n      showVideoSourceDropdown: false,\n      facingMode: 'user',\n      preferredImageMimeType: null,\n      preferredVideoMimeType: null,\n      showRecordingLength: false,\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n    this.i18nInit()\n    this.title = this.i18n('pluginNameCamera')\n\n    this.#enableMirror = this.opts.mirror\n\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n    this.render = this.render.bind(this)\n\n    // Camera controls\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.takeSnapshot = this.takeSnapshot.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.discardRecordedVideo = this.discardRecordedVideo.bind(this)\n    this.submit = this.submit.bind(this)\n    this.oneTwoThreeSmile = this.oneTwoThreeSmile.bind(this)\n    this.focus = this.focus.bind(this)\n    this.changeVideoSource = this.changeVideoSource.bind(this)\n\n    this.webcamActive = false\n\n    if (this.opts.countdown) {\n      this.opts.onBeforeSnapshot = this.oneTwoThreeSmile\n    }\n\n    this.setPluginState({\n      hasCamera: false,\n      cameraReady: false,\n      cameraError: null,\n      recordingLengthSeconds: 0,\n      videoSources: [],\n      currentDeviceId: null,\n    })\n  }\n\n  setOptions (newOpts) {\n    super.setOptions({\n      ...newOpts,\n      videoConstraints: {\n        // May be undefined but ... handles that\n        ...this.opts.videoConstraints,\n        ...newOpts?.videoConstraints,\n      },\n    })\n  }\n\n  hasCameraCheck () {\n    if (!this.mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.mediaDevices.enumerateDevices().then(devices => {\n      return devices.some(device => device.kind === 'videoinput')\n    })\n  }\n\n  isAudioOnly () {\n    return this.opts.modes.length === 1 && this.opts.modes[0] === 'audio-only'\n  }\n\n  getConstraints (deviceId = null) {\n    const acceptsAudio = this.opts.modes.indexOf('video-audio') !== -1\n      || this.opts.modes.indexOf('audio-only') !== -1\n    const acceptsVideo = !this.isAudioOnly()\n        && (this.opts.modes.indexOf('video-audio') !== -1\n          || this.opts.modes.indexOf('video-only') !== -1\n          || this.opts.modes.indexOf('picture') !== -1)\n\n    const videoConstraints = {\n      ...(this.opts.videoConstraints || { facingMode: this.opts.facingMode }),\n      // facingMode takes precedence over deviceId, and not needed\n      // when specific device is selected\n      ...(deviceId ? { deviceId, facingMode: null } : {}),\n    }\n\n    return {\n      audio: acceptsAudio,\n      video: acceptsVideo ? videoConstraints : false,\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  start (options = null) {\n    if (!this.supportsUserMedia) {\n      return Promise.reject(new Error('Webcam access not supported'))\n    }\n\n    this.webcamActive = true\n\n    if (this.opts.mirror) {\n      this.#enableMirror = true\n    }\n\n    const constraints = this.getConstraints(options && options.deviceId ? options.deviceId : null)\n\n    this.hasCameraCheck().then(hasCamera => {\n      this.setPluginState({\n        hasCamera,\n      })\n\n      // ask user for access to their camera\n      return this.mediaDevices.getUserMedia(constraints)\n        .then((stream) => {\n          this.stream = stream\n\n          let currentDeviceId = null\n          const tracks = this.isAudioOnly() ? stream.getAudioTracks() : stream.getVideoTracks()\n\n          if (!options || !options.deviceId) {\n            currentDeviceId = tracks[0].getSettings().deviceId\n          } else {\n            tracks.forEach((track) => {\n              if (track.getSettings().deviceId === options.deviceId) {\n                currentDeviceId = track.getSettings().deviceId\n              }\n            })\n          }\n\n          // Update the sources now, so we can access the names.\n          this.updateVideoSources()\n\n          this.setPluginState({\n            currentDeviceId,\n            cameraReady: true,\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            cameraReady: false,\n            cameraError: err,\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  /**\n   * @returns {object}\n   */\n  getMediaRecorderOptions () {\n    const options = {}\n\n    // Try to use the `opts.preferredVideoMimeType` or one of the `allowedFileTypes` for the recording.\n    // If the browser doesn't support it, we'll fall back to the browser default instead.\n    // Safari doesn't have the `isTypeSupported` API.\n    if (MediaRecorder.isTypeSupported) {\n      const { restrictions } = this.uppy.opts\n      let preferredVideoMimeTypes = []\n      if (this.opts.preferredVideoMimeType) {\n        preferredVideoMimeTypes = [this.opts.preferredVideoMimeType]\n      } else if (restrictions.allowedFileTypes) {\n        preferredVideoMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isVideoMimeType)\n      }\n\n      const filterSupportedTypes = (candidateType) => MediaRecorder.isTypeSupported(candidateType)\n        && getFileTypeExtension(candidateType)\n      const acceptableMimeTypes = preferredVideoMimeTypes.filter(filterSupportedTypes)\n\n      if (acceptableMimeTypes.length > 0) {\n        // eslint-disable-next-line prefer-destructuring\n        options.mimeType = acceptableMimeTypes[0]\n      }\n    }\n\n    return options\n  }\n\n  startRecording () {\n    // only used if supportsMediaRecorder() returned true\n    // eslint-disable-next-line compat/compat\n    this.recorder = new MediaRecorder(this.stream, this.getMediaRecorderOptions())\n    this.recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.recorder.addEventListener('dataavailable', (event) => {\n      this.recordingChunks.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (this.recordingChunks.length > 1\n          && restrictions.maxFileSize != null\n          && !stoppingBecauseOfMaxSize) {\n        const totalSize = this.recordingChunks.reduce((acc, chunk) => acc + chunk.size, 0)\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize = (totalSize - this.recordingChunks[0].size) / (this.recordingChunks.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(0, restrictions.maxFileSize - expectedEndChunkSize)\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this.stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.recorder.start(500)\n\n    if (this.opts.showRecordingLength) {\n      // Start the recordingLengthTimer if we are showing the recording length.\n      this.recordingLengthTimer = setInterval(() => {\n        const currentRecordingLength = this.getPluginState().recordingLengthSeconds\n        this.setPluginState({ recordingLengthSeconds: currentRecordingLength + 1 })\n      }, 1000)\n    }\n\n    this.setPluginState({\n      isRecording: true,\n    })\n  }\n\n  stopRecording () {\n    const stopped = new Promise((resolve) => {\n      this.recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.recorder.stop()\n\n      if (this.opts.showRecordingLength) {\n        // Stop the recordingLengthTimer if we are showing the recording length.\n        clearInterval(this.recordingLengthTimer)\n        this.setPluginState({ recordingLengthSeconds: 0 })\n      }\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false,\n      })\n      return this.getVideo()\n    }).then((file) => {\n      try {\n        this.capturedMediaFile = file\n        // create object url for capture result preview\n        this.setPluginState({\n          // eslint-disable-next-line compat/compat\n          recordedVideo: URL.createObjectURL(file.data),\n        })\n        this.#enableMirror = false\n      } catch (err) {\n        // Logging the error, exept restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }).then(() => {\n      this.recordingChunks = null\n      this.recorder = null\n    }, (error) => {\n      this.recordingChunks = null\n      this.recorder = null\n      throw error\n    })\n  }\n\n  discardRecordedVideo () {\n    this.setPluginState({ recordedVideo: null })\n\n    if (this.opts.mirror) {\n      this.#enableMirror = true\n    }\n\n    this.capturedMediaFile = null\n  }\n\n  submit () {\n    try {\n      if (this.capturedMediaFile) {\n        this.uppy.addFile(this.capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'error')\n      }\n    }\n  }\n\n  async stop () {\n    if (this.stream) {\n      const audioTracks = this.stream.getAudioTracks()\n      const videoTracks = this.stream.getVideoTracks()\n\n      audioTracks.concat(videoTracks).forEach((track) => track.stop())\n    }\n\n    if (this.recorder) {\n      await new Promise((resolve) => {\n        this.recorder.addEventListener('stop', resolve, { once: true })\n        this.recorder.stop()\n\n        if (this.opts.showRecordingLength) {\n          clearInterval(this.recordingLengthTimer)\n        }\n      })\n    }\n\n    this.recordingChunks = null\n    this.recorder = null\n    this.webcamActive = false\n    this.stream = null\n\n    this.setPluginState({\n      recordedVideo: null,\n      isRecording: false,\n      recordingLengthSeconds: 0,\n    })\n  }\n\n  getVideoElement () {\n    return this.el.querySelector('.uppy-Webcam-video')\n  }\n\n  oneTwoThreeSmile () {\n    return new Promise((resolve, reject) => {\n      let count = this.opts.countdown\n\n      // eslint-disable-next-line consistent-return\n      const countDown = setInterval(() => {\n        if (!this.webcamActive) {\n          clearInterval(countDown)\n          this.captureInProgress = false\n          return reject(new Error('Webcam is not active'))\n        }\n\n        if (count > 0) {\n          this.uppy.info(`${count}...`, 'warning', 800)\n          count--\n        } else {\n          clearInterval(countDown)\n          this.uppy.info(this.i18n('smile'), 'success', 1500)\n          setTimeout(() => resolve(), 1500)\n        }\n      }, 1000)\n    })\n  }\n\n  takeSnapshot () {\n    if (this.captureInProgress) return\n\n    this.captureInProgress = true\n\n    this.opts.onBeforeSnapshot().catch((err) => {\n      const message = typeof err === 'object' ? err.message : err\n      this.uppy.info(message, 'error', 5000)\n      return Promise.reject(new Error(`onBeforeSnapshot: ${message}`))\n    }).then(() => {\n      return this.getImage()\n    }).then((tagFile) => {\n      this.captureInProgress = false\n      try {\n        this.uppy.addFile(tagFile)\n      } catch (err) {\n        // Logging the error, except restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }, (error) => {\n      this.captureInProgress = false\n      throw error\n    })\n  }\n\n  getImage () {\n    const video = this.getVideoElement()\n    if (!video) {\n      return Promise.reject(new Error('No video element found, likely due to the Webcam tab being closed.'))\n    }\n\n    const width = video.videoWidth\n    const height = video.videoHeight\n\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(video, 0, 0)\n\n    const { restrictions } = this.uppy.opts\n    let preferredImageMimeTypes = []\n    if (this.opts.preferredImageMimeType) {\n      preferredImageMimeTypes = [this.opts.preferredImageMimeType]\n    } else if (restrictions.allowedFileTypes) {\n      preferredImageMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isImageMimeType)\n    }\n\n    const mimeType = preferredImageMimeTypes[0] || 'image/jpeg'\n    const ext = getFileTypeExtension(mimeType) || 'jpg'\n    const name = `cam-${Date.now()}.${ext}`\n\n    return canvasToBlob(canvas, mimeType).then((blob) => {\n      return {\n        source: this.id,\n        name,\n        data: new Blob([blob], { type: mimeType }),\n        type: mimeType,\n      }\n    })\n  }\n\n  getVideo () {\n    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)\n    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'\n    // attribute in order to determine the correct MIME type.\n    const mimeType = this.recordingChunks.find(blob => blob.type?.length > 0).type\n\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `webcam-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  focus () {\n    if (!this.opts.countdown) return\n    setTimeout(() => {\n      this.uppy.info(this.i18n('smile'), 'success', 1500)\n    }, 1000)\n  }\n\n  changeVideoSource (deviceId) {\n    this.stop()\n    this.start({ deviceId })\n  }\n\n  updateVideoSources () {\n    this.mediaDevices.enumerateDevices().then(devices => {\n      this.setPluginState({\n        videoSources: devices.filter((device) => device.kind === 'videoinput'),\n      })\n    })\n  }\n\n  render () {\n    if (!this.webcamActive) {\n      this.start()\n    }\n\n    const webcamState = this.getPluginState()\n\n    if (!webcamState.cameraReady || !webcamState.hasCamera) {\n      return (\n        <PermissionsScreen\n          icon={CameraIcon}\n          i18n={this.i18n}\n          hasCamera={webcamState.hasCamera}\n        />\n      )\n    }\n\n    return (\n      <CameraScreen\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...webcamState}\n        onChangeVideoSource={this.changeVideoSource}\n        onSnapshot={this.takeSnapshot}\n        onStartRecording={this.startRecording}\n        onStopRecording={this.stopRecording}\n        onDiscardRecordedVideo={this.discardRecordedVideo}\n        onSubmit={this.submit}\n        onFocus={this.focus}\n        onStop={this.stop}\n        i18n={this.i18n}\n        modes={this.opts.modes}\n        showRecordingLength={this.opts.showRecordingLength}\n        showVideoSourceDropdown={this.opts.showVideoSourceDropdown}\n        supportsRecording={supportsMediaRecorder()}\n        recording={webcamState.isRecording}\n        mirror={this.#enableMirror}\n        src={this.stream}\n      />\n    )\n  }\n\n  install () {\n    this.setPluginState({\n      cameraReady: false,\n      recordingLengthSeconds: 0,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (this.mediaDevices) {\n      this.updateVideoSources()\n\n      this.mediaDevices.ondevicechange = () => {\n        this.updateVideoSources()\n\n        if (this.stream) {\n          let restartStream = true\n\n          const { videoSources, currentDeviceId } = this.getPluginState()\n\n          videoSources.forEach((videoSource) => {\n            if (currentDeviceId === videoSource.deviceId) {\n              restartStream = false\n            }\n          })\n\n          if (restartStream) {\n            this.stop()\n            this.start()\n          }\n        }\n      }\n    }\n  }\n\n  uninstall () {\n    this.stop()\n    this.unmount()\n  }\n\n  onUnmount () {\n    this.stop()\n  }\n}\n"]}