{"version":3,"sources":["index.js"],"names":["BasePlugin","EventTracker","emitSocketProgress","getSocketHost","packageJson","MultipartUploader","assertServerError","res","error","Error","message","Object","assign","Symbol","for","AwsS3Multipart","constructor","uppy","opts","file","Client","remote","providerOptions","provider","Provider","RequestClient","client","tus","post","url","body","protocol","size","data","metadata","meta","token","setCompanionHeaders","companionHeaders","Promise","resolve","type","id","title","defaultOptions","timeout","limit","retryDelays","createMultipartUpload","bind","listParts","prepareUploadParts","abortMultipartUpload","completeMultipartUpload","upload","requests","RateLimitedQueue","uploaders","create","uploaderEvents","uploaderSockets","wrapPromiseFunction","resetUploaderReferences","fileID","abort","really","remove","close","assertHost","method","companionUrl","keys","forEach","key","toString","filename","name","then","uploadId","encodeURIComponent","get","partNumbers","join","parts","uploadIdEnc","delete","uploadFile","reject","queuedRequest","onStart","cFile","getFile","setFileState","s3Multipart","onProgress","bytesUploaded","bytesTotal","emit","uploader","onError","err","log","done","onSuccess","result","uploadObject","uploadResp","uploadURL","location","onPartComplete","part","getChunkSize","run","isPaused","start","onFileRemove","removed","onCancelAll","reason","onFilePause","pause","onPauseAll","onResumeAll","progress","uploadStarted","isRestored","uploadRemote","serverToken","connectToServerSocket","host","socket","Socket","target","send","onRetry","isOpen","onRetryAll","on","progressData","errData","fileIDs","length","promises","map","isRemote","all","cb","targetFileID","eventHandler","install","capabilities","getState","setState","resumableUploads","addPreProcessor","addUploader","uninstall","removePreProcessor","removeUploader","VERSION","version"],"mappings":"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","sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin'\nimport { Socket, Provider, RequestClient } from '@uppy/companion-client'\nimport EventTracker from '@uppy/utils/lib/EventTracker'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport { RateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\n\nimport packageJson from '../package.json'\nimport MultipartUploader from './MultipartUploader.js'\n\nfunction assertServerError (res) {\n  if (res && res.error) {\n    const error = new Error(res.message)\n    Object.assign(error, res.error)\n    throw error\n  }\n  return res\n}\n\nexport default class AwsS3Multipart extends BasePlugin {\n  static VERSION = packageJson.version\n\n  #queueRequestSocketToken\n\n  #client\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'AwsS3Multipart'\n    this.title = 'AWS S3 Multipart'\n    this.#client = new RequestClient(uppy, opts)\n\n    const defaultOptions = {\n      timeout: 30 * 1000,\n      limit: 0,\n      retryDelays: [0, 1000, 3000, 5000],\n      createMultipartUpload: this.createMultipartUpload.bind(this),\n      listParts: this.listParts.bind(this),\n      prepareUploadParts: this.prepareUploadParts.bind(this),\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\n      completeMultipartUpload: this.completeMultipartUpload.bind(this),\n      companionHeaders: {},\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.upload = this.upload.bind(this)\n\n    this.requests = new RateLimitedQueue(this.opts.limit)\n\n    this.uploaders = Object.create(null)\n    this.uploaderEvents = Object.create(null)\n    this.uploaderSockets = Object.create(null)\n\n    this.#queueRequestSocketToken = this.requests.wrapPromiseFunction(this.#requestSocketToken)\n  }\n\n  [Symbol.for('uppy test: getClient')] () { return this.#client }\n\n  // TODO: remove getter and setter for #client on the next major release\n  get client () { return this.#client }\n\n  set client (client) { this.#client = client }\n\n  /**\n   * Clean up all references for a file's upload: the MultipartUploader instance,\n   * any events related to the file, and the Companion WebSocket connection.\n   *\n   * Set `opts.abort` to tell S3 that the multipart upload is cancelled and must be removed.\n   * This should be done when the user cancels the upload, not when the upload is completed or errored.\n   */\n  resetUploaderReferences (fileID, opts = {}) {\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort({ really: opts.abort || false })\n      this.uploaders[fileID] = null\n    }\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove()\n      this.uploaderEvents[fileID] = null\n    }\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close()\n      this.uploaderSockets[fileID] = null\n    }\n  }\n\n  assertHost (method) {\n    if (!this.opts.companionUrl) {\n      throw new Error(`Expected a \\`companionUrl\\` option containing a Companion address, or if you are not using Companion, a custom \\`${method}\\` implementation.`)\n    }\n  }\n\n  createMultipartUpload (file) {\n    this.assertHost('createMultipartUpload')\n\n    const metadata = {}\n\n    Object.keys(file.meta).forEach(key => {\n      if (file.meta[key] != null) {\n        metadata[key] = file.meta[key].toString()\n      }\n    })\n\n    return this.#client.post('s3/multipart', {\n      filename: file.name,\n      type: file.type,\n      metadata,\n    }).then(assertServerError)\n  }\n\n  listParts (file, { key, uploadId }) {\n    this.assertHost('listParts')\n\n    const filename = encodeURIComponent(key)\n    return this.#client.get(`s3/multipart/${uploadId}?key=${filename}`)\n      .then(assertServerError)\n  }\n\n  prepareUploadParts (file, { key, uploadId, partNumbers }) {\n    this.assertHost('prepareUploadParts')\n\n    const filename = encodeURIComponent(key)\n    return this.#client.get(`s3/multipart/${uploadId}/batch?key=${filename}&partNumbers=${partNumbers.join(',')}`)\n      .then(assertServerError)\n  }\n\n  completeMultipartUpload (file, { key, uploadId, parts }) {\n    this.assertHost('completeMultipartUpload')\n\n    const filename = encodeURIComponent(key)\n    const uploadIdEnc = encodeURIComponent(uploadId)\n    return this.#client.post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, { parts })\n      .then(assertServerError)\n  }\n\n  abortMultipartUpload (file, { key, uploadId }) {\n    this.assertHost('abortMultipartUpload')\n\n    const filename = encodeURIComponent(key)\n    const uploadIdEnc = encodeURIComponent(uploadId)\n    return this.#client.delete(`s3/multipart/${uploadIdEnc}?key=${filename}`)\n      .then(assertServerError)\n  }\n\n  uploadFile (file) {\n    return new Promise((resolve, reject) => {\n      let queuedRequest\n\n      const onStart = (data) => {\n        const cFile = this.uppy.getFile(file.id)\n        this.uppy.setFileState(file.id, {\n          s3Multipart: {\n            ...cFile.s3Multipart,\n            key: data.key,\n            uploadId: data.uploadId,\n          },\n        })\n      }\n\n      const onProgress = (bytesUploaded, bytesTotal) => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded,\n          bytesTotal,\n        })\n      }\n\n      const onError = (err) => {\n        this.uppy.log(err)\n        this.uppy.emit('upload-error', file, err)\n\n        queuedRequest.done()\n        this.resetUploaderReferences(file.id)\n        reject(err)\n      }\n\n      const onSuccess = (result) => {\n        const uploadObject = upload // eslint-disable-line no-use-before-define\n        const uploadResp = {\n          body: {\n            ...result,\n          },\n          uploadURL: result.location,\n        }\n\n        queuedRequest.done()\n        this.resetUploaderReferences(file.id)\n\n        const cFile = this.uppy.getFile(file.id)\n        this.uppy.emit('upload-success', cFile || file, uploadResp)\n\n        if (result.location) {\n          this.uppy.log(`Download ${uploadObject.file.name} from ${result.location}`)\n        }\n\n        resolve(uploadObject)\n      }\n\n      const onPartComplete = (part) => {\n        const cFile = this.uppy.getFile(file.id)\n        if (!cFile) {\n          return\n        }\n\n        this.uppy.emit('s3-multipart:part-uploaded', cFile, part)\n      }\n\n      const upload = new MultipartUploader(file.data, {\n        // .bind to pass the file object to each handler.\n        createMultipartUpload: this.opts.createMultipartUpload.bind(this, file),\n        listParts: this.opts.listParts.bind(this, file),\n        prepareUploadParts: this.opts.prepareUploadParts.bind(this, file),\n        completeMultipartUpload: this.opts.completeMultipartUpload.bind(this, file),\n        abortMultipartUpload: this.opts.abortMultipartUpload.bind(this, file),\n        getChunkSize: this.opts.getChunkSize ? this.opts.getChunkSize.bind(this) : null,\n\n        onStart,\n        onProgress,\n        onError,\n        onSuccess,\n        onPartComplete,\n\n        limit: this.opts.limit || 5,\n        retryDelays: this.opts.retryDelays || [],\n        ...file.s3Multipart,\n      })\n\n      this.uploaders[file.id] = upload\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      queuedRequest = this.requests.run(() => {\n        if (!file.isPaused) {\n          upload.start()\n        }\n        // Don't do anything here, the caller will take care of cancelling the upload itself\n        // using resetUploaderReferences(). This is because resetUploaderReferences() has to be\n        // called when this request is still in the queue, and has not been started yet, too. At\n        // that point this cancellation function is not going to be called.\n        return () => {}\n      })\n\n      this.onFileRemove(file.id, (removed) => {\n        queuedRequest.abort()\n        this.resetUploaderReferences(file.id, { abort: true })\n        resolve(`upload ${removed.id} was removed`)\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n          this.resetUploaderReferences(file.id, { abort: true })\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.onFilePause(file.id, (isPaused) => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort()\n          upload.pause()\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort()\n          queuedRequest = this.requests.run(() => {\n            upload.start()\n            return () => {}\n          })\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort()\n        upload.pause()\n      })\n\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort()\n        if (file.error) {\n          upload.abort()\n        }\n        queuedRequest = this.requests.run(() => {\n          upload.start()\n          return () => {}\n        })\n      })\n\n      // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n      if (!file.progress.uploadStarted || !file.isRestored) {\n        this.uppy.emit('upload-started', file)\n      }\n    })\n  }\n\n  #requestSocketToken = async (file) => {\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const opts = { ...this.opts }\n\n    if (file.tus) {\n      // Install file-specific upload overrides.\n      Object.assign(opts, file.tus)\n    }\n\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      protocol: 's3-multipart',\n      size: file.data.size,\n      metadata: file.meta,\n    })\n    return res.token\n  }\n\n  async uploadRemote (file) {\n    this.resetUploaderReferences(file.id)\n\n    // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n    if (!file.progress.uploadStarted || !file.isRestored) {\n      this.uppy.emit('upload-started', file)\n    }\n\n    try {\n      if (file.serverToken) {\n        return this.connectToServerSocket(file)\n      }\n      const serverToken = await this.#queueRequestSocketToken(file)\n\n      this.uppy.setFileState(file.id, { serverToken })\n      return this.connectToServerSocket(this.uppy.getFile(file.id))\n    } catch (err) {\n      this.uppy.emit('upload-error', file, err)\n      throw err\n    }\n  }\n\n  connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      let queuedRequest\n\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      const socket = new Socket({ target: `${host}/api/${token}` })\n      this.uploaderSockets[file.id] = socket\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        socket.send('cancel', {})\n        this.resetUploaderReferences(file.id, { abort: true })\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.onFilePause(file.id, (isPaused) => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort()\n          socket.send('pause', {})\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort()\n          queuedRequest = this.requests.run(() => {\n            socket.send('resume', {})\n            return () => {}\n          })\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort()\n        socket.send('pause', {})\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n          socket.send('cancel', {})\n          this.resetUploaderReferences(file.id)\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort()\n        if (file.error) {\n          socket.send('pause', {})\n        }\n        queuedRequest = this.requests.run(() => {\n          socket.send('resume', {})\n        })\n      })\n\n      this.onRetry(file.id, () => {\n        // Only do the retry if the upload is actually in progress;\n        // else we could try to send these messages when the upload is still queued.\n        // We may need a better check for this since the socket may also be closed\n        // for other reasons, like network failures.\n        if (socket.isOpen) {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        }\n      })\n\n      this.onRetryAll(file.id, () => {\n        if (socket.isOpen) {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        }\n      })\n\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n      socket.on('error', (errData) => {\n        this.uppy.emit('upload-error', file, new Error(errData.error))\n        this.resetUploaderReferences(file.id)\n        queuedRequest.done()\n        reject(new Error(errData.error))\n      })\n\n      socket.on('success', (data) => {\n        const uploadResp = {\n          uploadURL: data.url,\n        }\n\n        this.uppy.emit('upload-success', file, uploadResp)\n        this.resetUploaderReferences(file.id)\n        queuedRequest.done()\n        resolve()\n      })\n\n      queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {})\n        }\n\n        return () => {}\n      })\n    })\n  }\n\n  upload (fileIDs) {\n    if (fileIDs.length === 0) return Promise.resolve()\n\n    const promises = fileIDs.map((id) => {\n      const file = this.uppy.getFile(id)\n      if (file.isRemote) {\n        return this.uploadRemote(file)\n      }\n      return this.uploadFile(file)\n    })\n\n    return Promise.all(promises)\n  }\n\n  #setCompanionHeaders = () => {\n    this.#client.setCompanionHeaders(this.opts.companionHeaders)\n    return Promise.resolve()\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  onFilePause (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        // const isPaused = this.uppy.pauseResume(fileID)\n        cb(isPaused)\n      }\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onPauseAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, eventHandler) {\n    this.uploaderEvents[fileID].on('cancel-all', (...args) => {\n      if (!this.uppy.getFile(fileID)) return\n      eventHandler(...args)\n    })\n  }\n\n  onResumeAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  install () {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        resumableUploads: true,\n      },\n    })\n    this.uppy.addPreProcessor(this.#setCompanionHeaders)\n    this.uppy.addUploader(this.upload)\n  }\n\n  uninstall () {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        resumableUploads: false,\n      },\n    })\n    this.uppy.removePreProcessor(this.#setCompanionHeaders)\n    this.uppy.removeUploader(this.upload)\n  }\n}\n"]}