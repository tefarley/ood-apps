{"version":3,"sources":["CameraScreen.jsx"],"names":["SnapshotButton","RecordButton","RecordingLength","VideoSourceSelect","SubmitButton","DiscardButton","isModeAvailable","modes","mode","indexOf","CameraScreen","Component","componentDidMount","onFocus","props","componentWillUnmount","onStop","render","src","recordedVideo","recording","supportsRecording","videoSources","showVideoSourceDropdown","showRecordingLength","onSubmit","i18n","mirror","onSnapshot","onStartRecording","onStopRecording","onDiscardRecordedVideo","recordingLengthSeconds","hasRecordedVideo","shouldShowRecordButton","shouldShowSnapshotButton","shouldShowRecordingLength","shouldShowVideoSourceDropdown","length","videoProps","playsinline","muted","controls","videoElement","srcObject","undefined","autoplay"],"mappings":";;AACA;;;;MACOA,c;;MACAC,Y;;MACAC,e;;MACAC,iB;;MACAC,Y;;MACAC,a;;AAEP,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,IAAjC,EAAuC;AACrC,SAAOD,KAAK,CAACE,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAAhC;AACD;;AAED,MAAME,YAAN,SAA2BC,iBAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACAD,IAAAA,OAAO;AACR;;AAEDE,EAAAA,oBAAoB,GAAI;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACAE,IAAAA,MAAM;AACP;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAM;AACJC,MAAAA,GADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,SAHI;AAIJb,MAAAA,KAJI;AAKJc,MAAAA,iBALI;AAMJC,MAAAA,YANI;AAOJC,MAAAA,uBAPI;AAQJC,MAAAA,mBARI;AASJC,MAAAA,QATI;AAUJC,MAAAA,IAVI;AAWJC,MAAAA,MAXI;AAYJC,MAAAA,UAZI;AAaJC,MAAAA,gBAbI;AAcJC,MAAAA,eAdI;AAeJC,MAAAA,sBAfI;AAgBJC,MAAAA;AAhBI,QAiBF,KAAKlB,KAjBT;AAmBA,UAAMmB,gBAAgB,GAAG,CAAC,CAACd,aAA3B;AACA,UAAMe,sBAAsB,GAAG,CAACD,gBAAD,IAAqBZ,iBAArB,KAC7Bf,eAAe,CAACC,KAAD,EAAQ,YAAR,CAAf,IACGD,eAAe,CAACC,KAAD,EAAQ,YAAR,CADlB,IAEGD,eAAe,CAACC,KAAD,EAAQ,aAAR,CAHW,CAA/B;AAKA,UAAM4B,wBAAwB,GAAG,CAACF,gBAAD,IAAqB3B,eAAe,CAACC,KAAD,EAAQ,SAAR,CAArE;AACA,UAAM6B,yBAAyB,GAAGf,iBAAiB,IAAIG,mBAArB,IAA4C,CAACS,gBAA/E;AACA,UAAMI,6BAA6B,GAAGd,uBAAuB,IAAID,YAA3B,IAA2CA,YAAY,CAACgB,MAAb,GAAsB,CAAvG;AAEA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE;AADI,KAAnB;;AAIA,QAAIrB,aAAJ,EAAmB;AACjBoB,MAAAA,UAAU,CAACE,KAAX,GAAmB,KAAnB;AACAF,MAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACAH,MAAAA,UAAU,CAACrB,GAAX,GAAiBC,aAAjB,CAHiB,CAKjB;;AACA,UAAI,KAAKwB,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBC,SAAlB,GAA8BC,SAA9B;AACD;AACF,KATD,MASO;AACLN,MAAAA,UAAU,CAACE,KAAX,GAAmB,IAAnB;AACAF,MAAAA,UAAU,CAACO,QAAX,GAAsB,IAAtB;AACAP,MAAAA,UAAU,CAACK,SAAX,GAAuB1B,GAAvB;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AACE;AACA,MAAA,GAAG,EAAGyB,YAAD,IAAmB,KAAKA,YAAL,GAAoBA,YAF9C;AAGE,MAAA,SAAS,EAAG,sBAAqBhB,MAAM,GAAG,6BAAH,GAAmC,EAAG;AAC7E;;AAJF,OAKMY,UALN,EADF,CADF,EAUE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGF,6BAA6B,GAC1BlC,iBAAiB,CAAC,KAAKW,KAAN,CADS,GAE1B,IAHN,CADF,EAME;AAAK,MAAA,SAAS,EAAC;AAAf,OACGqB,wBAAwB,IAAI,eAAC,cAAD;AAAgB,MAAA,UAAU,EAAEP,UAA5B;AAAwC,MAAA,IAAI,EAAEF;AAA9C,MAD/B,EAGGQ,sBAAsB,IACrB,eAAC,YAAD;AACE,MAAA,SAAS,EAAEd,SADb;AAEE,MAAA,gBAAgB,EAAES,gBAFpB;AAGE,MAAA,eAAe,EAAEC,eAHnB;AAIE,MAAA,IAAI,EAAEJ;AAJR,MAJJ,EAYGO,gBAAgB,IAAI,eAAC,YAAD;AAAc,MAAA,QAAQ,EAAER,QAAxB;AAAkC,MAAA,IAAI,EAAEC;AAAxC,MAZvB,EAcGO,gBAAgB,IAAI,eAAC,aAAD;AAAe,MAAA,SAAS,EAAEF,sBAA1B;AAAkD,MAAA,IAAI,EAAEL;AAAxD,MAdvB,CANF,EAuBE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGU,yBAAyB,IACxB,eAAC,eAAD;AAAiB,MAAA,sBAAsB,EAAEJ,sBAAzC;AAAiE,MAAA,IAAI,EAAEN;AAAvE,MAFJ,CAvBF,CAVF,CADF;AA0CD;;AAtGkC;;iBAyGtBhB,Y","sourcesContent":["/* eslint-disable jsx-a11y/media-has-caption */\nimport { h, Component } from 'preact'\nimport SnapshotButton from './SnapshotButton.jsx'\nimport RecordButton from './RecordButton.jsx'\nimport RecordingLength from './RecordingLength.jsx'\nimport VideoSourceSelect from './VideoSourceSelect.jsx'\nimport SubmitButton from './SubmitButton.jsx'\nimport DiscardButton from './DiscardButton.jsx'\n\nfunction isModeAvailable (modes, mode) {\n  return modes.indexOf(mode) !== -1\n}\n\nclass CameraScreen extends Component {\n  componentDidMount () {\n    const { onFocus } = this.props\n    onFocus()\n  }\n\n  componentWillUnmount () {\n    const { onStop } = this.props\n    onStop()\n  }\n\n  render () {\n    const {\n      src,\n      recordedVideo,\n      recording,\n      modes,\n      supportsRecording,\n      videoSources,\n      showVideoSourceDropdown,\n      showRecordingLength,\n      onSubmit,\n      i18n,\n      mirror,\n      onSnapshot,\n      onStartRecording,\n      onStopRecording,\n      onDiscardRecordedVideo,\n      recordingLengthSeconds,\n    } = this.props\n\n    const hasRecordedVideo = !!recordedVideo\n    const shouldShowRecordButton = !hasRecordedVideo && supportsRecording && (\n      isModeAvailable(modes, 'video-only')\n      || isModeAvailable(modes, 'audio-only')\n      || isModeAvailable(modes, 'video-audio')\n    )\n    const shouldShowSnapshotButton = !hasRecordedVideo && isModeAvailable(modes, 'picture')\n    const shouldShowRecordingLength = supportsRecording && showRecordingLength && !hasRecordedVideo\n    const shouldShowVideoSourceDropdown = showVideoSourceDropdown && videoSources && videoSources.length > 1\n\n    const videoProps = {\n      playsinline: true,\n    }\n\n    if (recordedVideo) {\n      videoProps.muted = false\n      videoProps.controls = true\n      videoProps.src = recordedVideo\n\n      // reset srcObject in dom. If not resetted, stream sticks in element\n      if (this.videoElement) {\n        this.videoElement.srcObject = undefined\n      }\n    } else {\n      videoProps.muted = true\n      videoProps.autoplay = true\n      videoProps.srcObject = src\n    }\n\n    return (\n      <div className=\"uppy uppy-Webcam-container\">\n        <div className=\"uppy-Webcam-videoContainer\">\n          <video\n            /* eslint-disable-next-line no-return-assign */\n            ref={(videoElement) => (this.videoElement = videoElement)}\n            className={`uppy-Webcam-video  ${mirror ? 'uppy-Webcam-video--mirrored' : ''}`}\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...videoProps}\n          />\n        </div>\n        <div className=\"uppy-Webcam-footer\">\n          <div className=\"uppy-Webcam-videoSourceContainer\">\n            {shouldShowVideoSourceDropdown\n              ? VideoSourceSelect(this.props)\n              : null}\n          </div>\n          <div className=\"uppy-Webcam-buttonContainer\">\n            {shouldShowSnapshotButton && <SnapshotButton onSnapshot={onSnapshot} i18n={i18n} />}\n\n            {shouldShowRecordButton && (\n              <RecordButton\n                recording={recording}\n                onStartRecording={onStartRecording}\n                onStopRecording={onStopRecording}\n                i18n={i18n}\n              />\n            )}\n\n            {hasRecordedVideo && <SubmitButton onSubmit={onSubmit} i18n={i18n} />}\n\n            {hasRecordedVideo && <DiscardButton onDiscard={onDiscardRecordedVideo} i18n={i18n} />}\n          </div>\n\n          <div className=\"uppy-Webcam-recordingLength\">\n            {shouldShowRecordingLength && (\n              <RecordingLength recordingLengthSeconds={recordingLengthSeconds} i18n={i18n} />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CameraScreen\n"]}