{"version":3,"sources":["ScreenCapture.jsx"],"names":["getFileTypeExtension","ScreenRecIcon","CaptureScreen","packageJson","locale","isScreenRecordingSupported","window","MediaRecorder","navigator","mediaDevices","getDisplayMedia","getMediaDevices","ScreenCapture","UIPlugin","constructor","uppy","opts","protocol","location","id","title","type","icon","defaultLocale","defaultOptions","displayMediaConstraints","video","width","height","frameRate","ideal","max","cursor","displaySurface","userMediaConstraints","audio","preferredVideoMimeType","i18nInit","install","bind","setPluginState","render","start","stop","startRecording","stopRecording","submit","streamInterrupted","streamInactivated","captureActive","capturedMediaFile","log","streamActive","audioStreamActive","target","mount","undefined","uninstall","videoStream","unmount","Promise","reject","Error","selectAudioStreamSource","selectVideoStreamSource","then","res","parent","hideAllPanels","resolve","addEventListener","catch","err","screenRecError","userDenied","setTimeout","audioStream","getUserMedia","name","info","i18n","options","recordingChunks","isTypeSupported","mimeType","tracks","getVideoTracks","push","getAudioTracks","outputStream","MediaStream","recorder","event","data","recording","recordedVideo","getPluginState","stopped","getVideo","file","URL","createObjectURL","error","addFile","isRestriction","forEach","track","fileExtension","Date","now","blob","Blob","source","recorderState","VERSION","version"],"mappings":"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","sourcesContent":["import { h } from 'preact'\nimport { UIPlugin } from '@uppy/core'\nimport getFileTypeExtension from '@uppy/utils/lib/getFileTypeExtension'\nimport ScreenRecIcon from './ScreenRecIcon.jsx'\nimport CaptureScreen from './CaptureScreen.jsx'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\n// Check if screen capturing is supported.\n// mediaDevices is supprted on mobile Safari, getDisplayMedia is not\nfunction isScreenRecordingSupported () {\n  return window.MediaRecorder && navigator.mediaDevices?.getDisplayMedia // eslint-disable-line compat/compat\n}\n\n// Adapted from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nfunction getMediaDevices () {\n  return window.MediaRecorder && navigator.mediaDevices // eslint-disable-line compat/compat\n}\n\n/**\n * Screen capture\n */\nexport default class ScreenCapture extends UIPlugin {\n  static VERSION = packageJson.version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.mediaDevices = getMediaDevices()\n    // eslint-disable-next-line no-restricted-globals\n    this.protocol = location.protocol === 'https:' ? 'https' : 'http'\n    this.id = this.opts.id || 'ScreenCapture'\n    this.title = this.opts.title || 'Screencast'\n    this.type = 'acquirer'\n    this.icon = ScreenRecIcon\n\n    this.defaultLocale = locale\n\n    // set default options\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints\n    const defaultOptions = {\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#Properties_of_shared_screen_tracks\n      displayMediaConstraints: {\n        video: {\n          width: 1280,\n          height: 720,\n          frameRate: {\n            ideal: 3,\n            max: 5,\n          },\n          cursor: 'motion',\n          displaySurface: 'monitor',\n        },\n      },\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints/audio\n      userMediaConstraints: {\n        audio: true,\n      },\n      preferredVideoMimeType: 'video/webm',\n    }\n\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    // i18n\n    this.i18nInit()\n\n    // uppy plugin class related\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n    this.render = this.render.bind(this)\n\n    // screen capturer related\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.submit = this.submit.bind(this)\n    this.streamInterrupted = this.streamInactivated.bind(this)\n\n    // initialize\n    this.captureActive = false\n    this.capturedMediaFile = null\n  }\n\n  install () {\n    if (!isScreenRecordingSupported()) {\n      this.uppy.log('Screen recorder access is not supported', 'error')\n      return null\n    }\n\n    this.setPluginState({\n      streamActive: false,\n      audioStreamActive: false,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    return undefined\n  }\n\n  uninstall () {\n    if (this.videoStream) {\n      this.stop()\n    }\n\n    this.unmount()\n  }\n\n  start () {\n    if (!this.mediaDevices) {\n      return Promise.reject(new Error('Screen recorder access not supported'))\n    }\n\n    this.captureActive = true\n\n    this.selectAudioStreamSource()\n\n    return this.selectVideoStreamSource()\n      .then(res => {\n        // something happened in start -> return\n        if (res === false) {\n          // Close the Dashboard panel if plugin is installed\n          // into Dashboard (could be other parent UI plugin)\n          if (this.parent && this.parent.hideAllPanels) {\n            this.parent.hideAllPanels()\n            this.captureActive = false\n          }\n        }\n      })\n  }\n\n  selectVideoStreamSource () {\n    // if active stream available, return it\n    if (this.videoStream) {\n      return new Promise(resolve => resolve(this.videoStream))\n    }\n\n    // ask user to select source to record and get mediastream from that\n    // eslint-disable-next-line compat/compat\n    return this.mediaDevices.getDisplayMedia(this.opts.displayMediaConstraints)\n      .then((videoStream) => {\n        this.videoStream = videoStream\n\n        // add event listener to stop recording if stream is interrupted\n        this.videoStream.addEventListener('inactive', () => {\n          this.streamInactivated()\n        })\n\n        this.setPluginState({\n          streamActive: true,\n        })\n\n        return videoStream\n      })\n      .catch((err) => {\n        this.setPluginState({\n          screenRecError: err,\n        })\n\n        this.userDenied = true\n\n        setTimeout(() => {\n          this.userDenied = false\n        }, 1000)\n\n        return false\n      })\n  }\n\n  selectAudioStreamSource () {\n    // if active stream available, return it\n    if (this.audioStream) {\n      return new Promise(resolve => resolve(this.audioStream))\n    }\n\n    // ask user to select source to record and get mediastream from that\n    // eslint-disable-next-line compat/compat\n    return this.mediaDevices.getUserMedia(this.opts.userMediaConstraints)\n      .then((audioStream) => {\n        this.audioStream = audioStream\n\n        this.setPluginState({\n          audioStreamActive: true,\n        })\n\n        return audioStream\n      })\n      .catch((err) => {\n        if (err.name === 'NotAllowedError') {\n          this.uppy.info(this.i18n('micDisabled'), 'error', 5000)\n        }\n\n        return false\n      })\n  }\n\n  startRecording () {\n    const options = {}\n    this.capturedMediaFile = null\n    this.recordingChunks = []\n    const { preferredVideoMimeType } = this.opts\n\n    this.selectVideoStreamSource()\n      .then((videoStream) => {\n        // Attempt to use the passed preferredVideoMimeType (if any) during recording.\n        // If the browser doesn't support it, we'll fall back to the browser default instead\n        if (preferredVideoMimeType\n            && MediaRecorder.isTypeSupported(preferredVideoMimeType)\n            && getFileTypeExtension(preferredVideoMimeType)) {\n          options.mimeType = preferredVideoMimeType\n        }\n\n        // prepare tracks\n        const tracks = [videoStream.getVideoTracks()[0]]\n\n        // merge audio if exits\n        if (this.audioStream) {\n          tracks.push(this.audioStream.getAudioTracks()[0])\n        }\n\n        // create new stream from video and audio\n        // eslint-disable-next-line compat/compat\n        this.outputStream = new MediaStream(tracks)\n\n        // initialize mediarecorder\n        // eslint-disable-next-line compat/compat\n        this.recorder = new MediaRecorder(this.outputStream, options)\n\n        // push data to buffer when data available\n        this.recorder.addEventListener('dataavailable', (event) => {\n          this.recordingChunks.push(event.data)\n        })\n\n        // start recording\n        this.recorder.start()\n\n        // set plugin state to recording\n        this.setPluginState({\n          recording: true,\n        })\n      })\n      .catch((err) => {\n        this.uppy.log(err, 'error')\n      })\n  }\n\n  streamInactivated () {\n    // get screen recorder state\n    const { recordedVideo, recording } = { ...this.getPluginState() }\n\n    if (!recordedVideo && !recording) {\n      // Close the Dashboard panel if plugin is installed\n      // into Dashboard (could be other parent UI plugin)\n      if (this.parent && this.parent.hideAllPanels) {\n        this.parent.hideAllPanels()\n      }\n    } else if (recording) {\n      // stop recorder if it is active\n      this.uppy.log('Capture stream inactive — stop recording')\n      this.stopRecording()\n    }\n\n    this.videoStream = null\n    this.audioStream = null\n\n    this.setPluginState({\n      streamActive: false, audioStreamActive: false,\n    })\n  }\n\n  stopRecording () {\n    const stopped = new Promise((resolve) => {\n      this.recorder.addEventListener('stop', () => {\n        resolve()\n      })\n\n      this.recorder.stop()\n    })\n\n    return stopped.then(() => {\n      // recording stopped\n      this.setPluginState({\n        recording: false,\n      })\n      // get video file after recorder stopped\n      return this.getVideo()\n    }).then((file) => {\n      // store media file\n      this.capturedMediaFile = file\n\n      // create object url for capture result preview\n      this.setPluginState({\n        // eslint-disable-next-line compat/compat\n        recordedVideo: URL.createObjectURL(file.data),\n      })\n    }).then(() => {\n      this.recordingChunks = null\n      this.recorder = null\n    }, (error) => {\n      this.recordingChunks = null\n      this.recorder = null\n      throw error\n    })\n  }\n\n  submit () {\n    try {\n      // add recorded file to uppy\n      if (this.capturedMediaFile) {\n        this.uppy.addFile(this.capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'error')\n      }\n    }\n  }\n\n  stop () {\n    // flush video stream\n    if (this.videoStream) {\n      this.videoStream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n      this.videoStream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.videoStream = null\n    }\n\n    // flush audio stream\n    if (this.audioStream) {\n      this.audioStream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.audioStream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n      this.audioStream = null\n    }\n\n    // flush output stream\n    if (this.outputStream) {\n      this.outputStream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.outputStream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n      this.outputStream = null\n    }\n\n    // remove preview video\n    this.setPluginState({\n      recordedVideo: null,\n    })\n\n    this.captureActive = false\n  }\n\n  getVideo () {\n    const mimeType = this.recordingChunks[0].type\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `screencap-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  render () {\n    // get screen recorder state\n    const recorderState = this.getPluginState()\n\n    if (!recorderState.streamActive && !this.captureActive && !this.userDenied) {\n      this.start()\n    }\n\n    return (\n      <CaptureScreen\n        {...recorderState} // eslint-disable-line react/jsx-props-no-spreading\n        onStartRecording={this.startRecording}\n        onStopRecording={this.stopRecording}\n        onStop={this.stop}\n        onSubmit={this.submit}\n        i18n={this.i18n}\n        stream={this.videoStream}\n      />\n    )\n  }\n}\n"]}