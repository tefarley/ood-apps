{"version":3,"sources":["RecordingScreen.jsx"],"names":["RecordButton","RecordingLength","AudioSourceSelect","AudioOscilloscope","SubmitButton","DiscardButton","RecordingScreen","props","stream","recordedAudio","onStop","recording","supportsRecording","audioSources","showAudioSourceDropdown","onSubmit","i18n","onStartRecording","onStopRecording","onDiscardRecordedAudio","recordingLengthSeconds","canvasEl","oscilloscope","current","canvas","width","height","canvasContext","lineWidth","fillStyle","strokeStyle","draw","audioContext","AudioContext","source","createMediaStreamSource","addSource","hasRecordedAudio","shouldShowRecordButton","shouldShowAudioSourceDropdown","length"],"mappings":";;AACA;;AACA;;AAFA;MAGOA,Y;;MACAC,e;;MACAC,iB;;MACAC,iB;;MACAC,Y;;MACAC,a;;AAEQ,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC9C,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,uBAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,IATI;AAUJC,IAAAA,gBAVI;AAWJC,IAAAA,eAXI;AAYJC,IAAAA,sBAZI;AAaJC,IAAAA;AAbI,MAcFb,KAdJ;AAgBA,QAAMc,QAAQ,GAAG,mBAAO,IAAP,CAAjB;AACA,QAAMC,YAAY,GAAG,mBAAO,IAAP,CAArB,CAlB8C,CAoB9C;;AACA,wBAAU,MAAM;AACd,WAAO,MAAM;AACXA,MAAAA,YAAY,CAACC,OAAb,GAAuB,IAAvB;AACAb,MAAAA,MAAM;AACP,KAHD;AAID,GALD,EAKG,CAACA,MAAD,CALH,EArB8C,CA4B9C;;AACA,wBAAU,MAAM;AACd,QAAI,CAACD,aAAL,EAAoB;AAClBa,MAAAA,YAAY,CAACC,OAAb,GAAuB,IAAIpB,iBAAJ,CAAsBkB,QAAQ,CAACE,OAA/B,EAAwC;AAC7DC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,GADD;AAENC,UAAAA,MAAM,EAAE;AAFF,SADqD;AAK7DC,QAAAA,aAAa,EAAE;AACbC,UAAAA,SAAS,EAAE,CADE;AAEbC,UAAAA,SAAS,EAAE,YAFE;AAGbC,UAAAA,WAAW,EAAE;AAHA;AAL8C,OAAxC,CAAvB;AAWAR,MAAAA,YAAY,CAACC,OAAb,CAAqBQ,IAArB;;AAEA,UAAIvB,MAAJ,EAAY;AACV,cAAMwB,YAAY,GAAG,IAAIC,YAAJ,EAArB;AACA,cAAMC,MAAM,GAAGF,YAAY,CAACG,uBAAb,CAAqC3B,MAArC,CAAf;AACAc,QAAAA,YAAY,CAACC,OAAb,CAAqBa,SAArB,CAA+BF,MAA/B;AACD;AACF;AACF,GArBD,EAqBG,CAACzB,aAAD,EAAgBD,MAAhB,CArBH;AAuBA,QAAM6B,gBAAgB,GAAG5B,aAAa,IAAI,IAA1C;AACA,QAAM6B,sBAAsB,GAAG,CAACD,gBAAD,IAAqBzB,iBAApD;AACA,QAAM2B,6BAA6B,GAAGzB,uBAAuB,IACxD,CAACuB,gBADgC,IAEjCxB,YAFiC,IAGjCA,YAAY,CAAC2B,MAAb,GAAsB,CAH3B;AAKA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,gBAAgB,GAEb;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,GAAG,EAAE5B;AAHP,IAFa,GAQb;AACE,IAAA,GAAG,EAAEY,QADP;AAEE,IAAA,SAAS,EAAC;AAFZ,IATN,CADF,EAgBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGkB,6BAA6B,GAC1BrC,iBAAiB,CAACK,KAAD,CADS,GAE1B,IAHN,CADF,EAME;AAAK,IAAA,SAAS,EAAC;AAAf,KACG+B,sBAAsB,IACrB,eAAC,YAAD;AACE,IAAA,SAAS,EAAE3B,SADb;AAEE,IAAA,gBAAgB,EAAEM,gBAFpB;AAGE,IAAA,eAAe,EAAEC,eAHnB;AAIE,IAAA,IAAI,EAAEF;AAJR,IAFJ,EAUGqB,gBAAgB,IAAI,eAAC,YAAD;AAAc,IAAA,QAAQ,EAAEtB,QAAxB;AAAkC,IAAA,IAAI,EAAEC;AAAxC,IAVvB,EAYGqB,gBAAgB,IAAI,eAAC,aAAD;AAAe,IAAA,SAAS,EAAElB,sBAA1B;AAAkD,IAAA,IAAI,EAAEH;AAAxD,IAZvB,CANF,EAqBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAACqB,gBAAD,IACC,eAAC,eAAD;AAAiB,IAAA,sBAAsB,EAAEjB,sBAAzC;AAAiE,IAAA,IAAI,EAAEJ;AAAvE,IAFJ,CArBF,CAhBF,CADF;AA8CD;;iBAzGuBV,e","sourcesContent":["/* eslint-disable jsx-a11y/media-has-caption */\nimport { h } from 'preact'\nimport { useEffect, useRef } from 'preact/hooks'\nimport RecordButton from './RecordButton.jsx'\nimport RecordingLength from './RecordingLength.jsx'\nimport AudioSourceSelect from './AudioSourceSelect.jsx'\nimport AudioOscilloscope from './audio-oscilloscope/index.js'\nimport SubmitButton from './SubmitButton.jsx'\nimport DiscardButton from './DiscardButton.jsx'\n\nexport default function RecordingScreen (props) {\n  const {\n    stream,\n    recordedAudio,\n    onStop,\n    recording,\n    supportsRecording,\n    audioSources,\n    showAudioSourceDropdown,\n    onSubmit,\n    i18n,\n    onStartRecording,\n    onStopRecording,\n    onDiscardRecordedAudio,\n    recordingLengthSeconds,\n  } = props\n\n  const canvasEl = useRef(null)\n  const oscilloscope = useRef(null)\n\n  // componentDidMount / componentDidUnmount\n  useEffect(() => {\n    return () => {\n      oscilloscope.current = null\n      onStop()\n    }\n  }, [onStop])\n\n  // componentDidUpdate\n  useEffect(() => {\n    if (!recordedAudio) {\n      oscilloscope.current = new AudioOscilloscope(canvasEl.current, {\n        canvas: {\n          width: 600,\n          height: 600,\n        },\n        canvasContext: {\n          lineWidth: 2,\n          fillStyle: 'rgb(0,0,0)',\n          strokeStyle: 'green',\n        },\n      })\n      oscilloscope.current.draw()\n\n      if (stream) {\n        const audioContext = new AudioContext()\n        const source = audioContext.createMediaStreamSource(stream)\n        oscilloscope.current.addSource(source)\n      }\n    }\n  }, [recordedAudio, stream])\n\n  const hasRecordedAudio = recordedAudio != null\n  const shouldShowRecordButton = !hasRecordedAudio && supportsRecording\n  const shouldShowAudioSourceDropdown = showAudioSourceDropdown\n    && !hasRecordedAudio\n    && audioSources\n    && audioSources.length > 1\n\n  return (\n    <div className=\"uppy-Audio-container\">\n      <div className=\"uppy-Audio-audioContainer\">\n        {hasRecordedAudio\n          ? (\n            <audio\n              className=\"uppy-Audio-player\"\n              controls\n              src={recordedAudio}\n            />\n          ) : (\n            <canvas\n              ref={canvasEl}\n              className=\"uppy-Audio-canvas\"\n            />\n          )}\n      </div>\n      <div className=\"uppy-Audio-footer\">\n        <div className=\"uppy-Audio-audioSourceContainer\">\n          {shouldShowAudioSourceDropdown\n            ? AudioSourceSelect(props)\n            : null}\n        </div>\n        <div className=\"uppy-Audio-buttonContainer\">\n          {shouldShowRecordButton && (\n            <RecordButton\n              recording={recording}\n              onStartRecording={onStartRecording}\n              onStopRecording={onStopRecording}\n              i18n={i18n}\n            />\n          )}\n\n          {hasRecordedAudio && <SubmitButton onSubmit={onSubmit} i18n={i18n} />}\n\n          {hasRecordedAudio && <DiscardButton onDiscard={onDiscardRecordedAudio} i18n={i18n} />}\n        </div>\n\n        <div className=\"uppy-Audio-recordingLength\">\n          {!hasRecordedAudio && (\n            <RecordingLength recordingLengthSeconds={recordingLengthSeconds} i18n={i18n} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n"]}